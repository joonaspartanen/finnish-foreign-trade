{"version":3,"sources":["components/Map.js","components/Menu.js","components/TradeBalanceChart.js","components/ExportsBarChart.js","services/DataService.js","App.js","index.js"],"names":["Map","imports","exports","flow","values","year","color","hoverColor","useEffect","am4core","am4themes_dark","map","am4maps","geodata","am4geodata_worldLow","projection","Mercator","zoomControl","backgroundSeries","mapPolygons","template","polygon","fill","fillOpacity","chartContainer","wheelable","window","innerHeight","innerWidth","homeZoomLevel","minZoomLevel","homeGeoPoint","latitude","longitude","maxPanOut","polygonSeries","series","push","heatRules","property","target","min","brighten","max","useGeodata","exclude","data","polygonTemplate","tooltipText","nonScalingStroke","strokeWidth","events","on","finland","getPolygonById","states","create","properties","dispose","id","style","width","height","overflow","Menu","setFlow","position","bottom","left","toggle","name","variant","onClick","value","TradeBalanceChart","tradeBalance","am4themes_animated","am4themes_spiritedaway","chart","am4charts","marginRight","categoryAxis","yAxes","dataFields","category","numberFormatter","numberFormat","renderer","inversed","grid","location","cellStartLocation","cellEndLocation","valueAxis","xAxes","bigNumberPrefixes","opposite","tradeBalanceSeries","valueX","categoryY","columns","sequencedInterpolation","adapter","add","dataItem","importSeries","exportSeries","valueY","categoryX","ExportsChart","productData","inside","title","text","createSeries","field","stacked","legend","paddingLeft","disabled","paddingTop","getImports","a","axios","get","response","getExports","getTradeBalance","getProductData","App","useState","setImports","setExports","setTradeBalance","setProductData","dataService","then","res","console","log","backgroundColor","fluid","paddingRight","bg","expand","Brand","href","Toggle","aria-controls","Collapse","className","Link","length","animation","padding","ExportsBarChart","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.262eecf6.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport * as am4core from '@amcharts/amcharts4/core'\r\nimport * as am4maps from '@amcharts/amcharts4/maps'\r\nimport am4themes_dark from '@amcharts/amcharts4/themes/dark'\r\n//import am4themes_animated from '@amcharts/amcharts4/themes/animated'\r\nimport am4geodata_worldLow from '@amcharts/amcharts4-geodata/worldLow'\r\n\r\nconst Map = ({ imports, exports, flow, year }) => {\r\n\r\n  let values = null\r\n  let color = '#5E5B78'\r\n  let hoverColor = '#4B0000'\r\n\r\n  if (flow === 'exports') {\r\n    values = exports\r\n    color = '#5E5B78'\r\n    hoverColor = '#4B0000'\r\n  } else {\r\n    values = imports\r\n    color = '#C17D80'\r\n    hoverColor = '#161331'\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    //am4core.useTheme(am4themes_animated)\r\n    am4core.useTheme(am4themes_dark)\r\n\r\n    let map = am4core.create('mapdiv', am4maps.MapChart)\r\n\r\n    map.geodata = am4geodata_worldLow\r\n    map.projection = new am4maps.projections.Mercator()\r\n    //map.projection = new am4maps.projections.Orthographic()\r\n    //map.panBehavior = 'rotateLongLat'\r\n    map.zoomControl = new am4maps.ZoomControl()\r\n    map.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color('#EEE')\r\n    map.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 1\r\n    map.chartContainer.wheelable = false\r\n\r\n    //let graticuleSeries = map.series.push(new am4maps.GraticuleSeries())\r\n    //graticuleSeries.mapLines.template.line.stroke = am4core.color('#67b7dc')\r\n    //graticuleSeries.mapLines.template.line.strokeOpacity = 0.2\r\n    //graticuleSeries.fitExtent = false\r\n\r\n    // The initial zoom level must be higher if using portrait view.\r\n    if (window.innerHeight > window.innerWidth) {\r\n      map.homeZoomLevel = 5\r\n      map.minZoomLevel = 5\r\n    } else {\r\n      map.homeZoomLevel = 2\r\n      map.minZoomLevel = 2\r\n    }\r\n\r\n    map.homeGeoPoint = {\r\n      latitude: 50,\r\n      longitude: 11\r\n    }\r\n\r\n    map.maxPanOut = 0\r\n\r\n    let polygonSeries = map.series.push(new am4maps.MapPolygonSeries())\r\n\r\n    polygonSeries.heatRules.push({\r\n      property: 'fill',\r\n      target: polygonSeries.mapPolygons.template,\r\n      min: am4core.color(color).brighten(1.4),\r\n      max: am4core.color(color).brighten(-0.6)\r\n\r\n      //      min: map.colors.getIndex(colorIndex).brighten(2.0),\r\n      //      max: map.colors.getIndex(colorIndex).brighten(-0.8)\r\n    })\r\n\r\n    polygonSeries.useGeodata = true\r\n    polygonSeries.exclude = ['AQ', 'SJ']\r\n\r\n    polygonSeries.data = values\r\n\r\n    let polygonTemplate = polygonSeries.mapPolygons.template\r\n    polygonTemplate.tooltipText = `{name}: {euros} €`\r\n    polygonTemplate.nonScalingStroke = true\r\n    polygonTemplate.strokeWidth = 0.5\r\n\r\n    map.events.on(\"ready\", () => {\r\n      let finland = polygonSeries.getPolygonById(\"FI\")\r\n      finland.fill = am4core.color('#FFF')\r\n      finland.tooltipText = ''\r\n    })\r\n\r\n    let hs = polygonTemplate.states.create('hover')\r\n    hs.properties.fill = am4core.color(hoverColor)\r\n\r\n    return (() => {\r\n      if (map) {\r\n        map.dispose()\r\n      }\r\n    })\r\n  }, [values, color, hoverColor])\r\n\r\n  return (\r\n    <div id='mapdiv' style={{ width: '100%', height: '100%', overflow: 'hidden' }}></div>\r\n  )\r\n}\r\n\r\nexport default Map","import React from 'react'\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\r\n\r\nconst Menu = ({ setFlow }) => {\r\n\r\n\r\n  return (\r\n    <div style={{ position: 'absolute', bottom: '2em', left: '2em' }}>\r\n      <ToggleButtonGroup\r\n        toggle='true'\r\n        name='change-flow'>\r\n        <ToggleButton\r\n          variant='primary'\r\n          onClick={(value) => setFlow('exports')}>\r\n          Exports 2018\r\n        </ToggleButton>\r\n        <ToggleButton\r\n          variant='secondary'\r\n          onClick={(value) => setFlow('imports')}>\r\n          Imports 2018\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Menu","import React, { useEffect } from 'react'\r\nimport * as am4core from '@amcharts/amcharts4/core'\r\nimport * as am4charts from '@amcharts/amcharts4/charts'\r\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated'\r\nimport am4themes_spiritedaway from '@amcharts/amcharts4/themes/spiritedaway'\r\n\r\n\r\nconst TradeBalanceChart = ({ tradeBalance }) => {\r\n\r\n  useEffect(() => {\r\n\r\n    am4core.useTheme(am4themes_animated)\r\n    am4core.useTheme(am4themes_spiritedaway)\r\n\r\n    let chart = am4core.create('chartdiv', am4charts.XYChart)\r\n    chart.data = tradeBalance\r\n    chart.marginRight = '100'\r\n\r\n    if (window.innerHeight > window.innerWidth) {\r\n      let categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis())\r\n      categoryAxis.dataFields.category = 'year'\r\n      categoryAxis.numberFormatter.numberFormat = '#'\r\n      categoryAxis.renderer.inversed = true\r\n      categoryAxis.renderer.grid.template.location = 0\r\n      categoryAxis.renderer.cellStartLocation = 0.1\r\n      categoryAxis.renderer.cellEndLocation = 0.9\r\n\r\n      let valueAxis = chart.xAxes.push(new am4charts.ValueAxis())\r\n      // valueAxis.min = 0\r\n      valueAxis.numberFormatter.numberFormat = '##.##a'\r\n      valueAxis.numberFormatter.bigNumberPrefixes = [\r\n        { 'number': 1e+9, 'suffix': 'B' }\r\n      ]\r\n\r\n      valueAxis.renderer.opposite = true\r\n\r\n      let tradeBalanceSeries = chart.series.push(new am4charts.ColumnSeries())\r\n      tradeBalanceSeries.name = 'Trade Balance'\r\n      tradeBalanceSeries.fill = am4core.color('#56a963')\r\n      tradeBalanceSeries.strokeWidth = 0\r\n      tradeBalanceSeries.dataFields.valueX = 'tradeBalance'\r\n      tradeBalanceSeries.dataFields.categoryY = 'year'\r\n      tradeBalanceSeries.columns.template.height = am4core.percent(100)\r\n      tradeBalanceSeries.sequencedInterpolation = true\r\n      tradeBalanceSeries.columns.template.tooltipText = '{name}: €{valueX}'\r\n\r\n      tradeBalanceSeries.columns.template.adapter.add('fill', (fill, target) => {\r\n        if (target.dataItem && (target.dataItem.valueX < 0)) {\r\n          return am4core.color('#56a963')\r\n        }\r\n        else {\r\n          return fill\r\n        }\r\n      })\r\n\r\n      let importSeries = chart.series.push(new am4charts.ColumnSeries())\r\n      importSeries.name = 'Imports'\r\n      importSeries.fill = am4core.color('#63718B')\r\n      importSeries.strokeWidth = 0\r\n      importSeries.dataFields.valueX = 'imports'\r\n      importSeries.dataFields.categoryY = 'year'\r\n      importSeries.columns.template.height = am4core.percent(100)\r\n      importSeries.sequencedInterpolation = true\r\n      importSeries.columns.template.tooltipText = '{name}: €{valueX}'\r\n\r\n      let exportSeries = chart.series.push(new am4charts.ColumnSeries())\r\n      exportSeries.name = 'Exports'\r\n      exportSeries.fill = am4core.color('#EBA05C')\r\n      exportSeries.strokeWidth = 0\r\n      exportSeries.dataFields.valueX = 'exports'\r\n      exportSeries.dataFields.categoryY = 'year'\r\n      exportSeries.columns.template.height = am4core.percent(100)\r\n      exportSeries.sequencedInterpolation = true\r\n      exportSeries.columns.template.tooltipText = '{name}: €{valueX}'\r\n    } else {\r\n      let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\r\n      categoryAxis.dataFields.category = 'year'\r\n      categoryAxis.numberFormatter.numberFormat = '#'\r\n      categoryAxis.renderer.inversed = true\r\n      categoryAxis.renderer.grid.template.location = 0\r\n      categoryAxis.renderer.cellStartLocation = 0.1\r\n      categoryAxis.renderer.cellEndLocation = 0.9\r\n\r\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\r\n      // valueAxis.min = 0\r\n      valueAxis.numberFormatter.numberFormat = '##.##a'\r\n      valueAxis.numberFormatter.bigNumberPrefixes = [\r\n        { 'number': 1e+9, 'suffix': 'B' }\r\n      ]\r\n\r\n      let tradeBalanceSeries = chart.series.push(new am4charts.ColumnSeries())\r\n      tradeBalanceSeries.name = 'Trade Balance'\r\n      tradeBalanceSeries.fill = am4core.color('#2E8B57')\r\n      tradeBalanceSeries.strokeWidth = 0\r\n      tradeBalanceSeries.dataFields.valueY = 'tradeBalance'\r\n      tradeBalanceSeries.dataFields.categoryX = 'year'\r\n      tradeBalanceSeries.columns.template.height = am4core.percent(100)\r\n      tradeBalanceSeries.sequencedInterpolation = true\r\n      tradeBalanceSeries.columns.template.tooltipText = '{name}: €{valueY}'\r\n\r\n      tradeBalanceSeries.columns.template.adapter.add('fill', (fill, target) => {\r\n        if (target.dataItem && (target.dataItem.valueY < 0)) {\r\n          return am4core.color('#800000')\r\n        }\r\n        else {\r\n          return fill\r\n        }\r\n      })\r\n\r\n      let importSeries = chart.series.push(new am4charts.ColumnSeries())\r\n      importSeries.name = 'Imports'\r\n      importSeries.fill = am4core.color('#63718B')\r\n      importSeries.strokeWidth = 0\r\n      importSeries.dataFields.valueY = 'imports'\r\n      importSeries.dataFields.categoryX = 'year'\r\n      importSeries.columns.template.height = am4core.percent(100)\r\n      importSeries.sequencedInterpolation = true\r\n      importSeries.columns.template.tooltipText = '{name}: €{valueY}'\r\n\r\n      let exportSeries = chart.series.push(new am4charts.ColumnSeries())\r\n      exportSeries.name = 'Exports'\r\n      exportSeries.fill = am4core.color('#EBA05C')\r\n      exportSeries.strokeWidth = 0\r\n      exportSeries.dataFields.valueY = 'exports'\r\n      exportSeries.dataFields.categoryX = 'year'\r\n      exportSeries.columns.template.height = am4core.percent(100)\r\n      exportSeries.sequencedInterpolation = true\r\n      exportSeries.columns.template.tooltipText = '{name}: €{valueY}'\r\n    }\r\n\r\n    return (() => {\r\n      if (chart) {\r\n        chart.dispose()\r\n      }\r\n    })\r\n\r\n  }, [tradeBalance])\r\n\r\n  return (\r\n    <div id='chartdiv' style={{ width: '100%', height: '100%', overflow: 'hidden' }}></div>\r\n  )\r\n\r\n}\r\n\r\nexport default TradeBalanceChart","import React, { useEffect } from 'react'\r\nimport * as am4core from '@amcharts/amcharts4/core'\r\nimport * as am4charts from '@amcharts/amcharts4/charts'\r\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated'\r\nimport am4themes_spiritedaway from '@amcharts/amcharts4/themes/spiritedaway'\r\n\r\nconst ExportsChart = ({ productData }) => {\r\n\r\n  useEffect(() => {\r\n\r\n    am4core.useTheme(am4themes_animated)\r\n    am4core.useTheme(am4themes_spiritedaway)\r\n\r\n    let chart = am4core.create('products-barchart-div', am4charts.XYChart);\r\n\r\n    chart.data = productData\r\n\r\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\r\n    categoryAxis.dataFields.category = 'flow'\r\n    categoryAxis.renderer.grid.template.location = 0\r\n\r\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\r\n    valueAxis.renderer.inside = true\r\n    valueAxis.min = 0\r\n    valueAxis.title.text = \"Euros\"\r\n    valueAxis.numberFormatter.numberFormat = '##.##a'\r\n    valueAxis.numberFormatter.bigNumberPrefixes = [\r\n      { 'number': 1e+9, 'suffix': 'B' }\r\n    ]\r\n\r\n\r\n    const createSeries = (field) => {\r\n      let series = chart.series.push(new am4charts.ColumnSeries())\r\n      series.name = field\r\n      series.dataFields.valueY = field\r\n      series.dataFields.categoryX = 'flow'\r\n      series.sequencedInterpolation = true\r\n      series.stacked = true\r\n      series.columns.template.height = am4core.percent(100)\r\n      series.columns.template.width = am4core.percent(30)\r\n      series.columns.template.tooltipText = '{name}\\n€ {valueY}'\r\n\r\n      return series\r\n    }\r\n\r\n    createSeries('Food and live animals')\r\n    createSeries('Beverages and tobacco')\r\n    createSeries('Crude materials,inedible,except fuels')\r\n    createSeries('Mineral fuels etc')\r\n    createSeries('Animal and vegetable oils and fats')\r\n    createSeries('Chemicals and related products,n.e.s.')\r\n    createSeries('Basic manufactures')\r\n    createSeries('Machinery,transport equipment')\r\n    createSeries('Miscellaneous manufactured articles')\r\n    createSeries('Goods not classified elsewhere')\r\n\r\n\r\n    // Show legend only in landscape view\r\n    if (window.innerHeight < window.innerWidth) {\r\n      chart.legend = new am4charts.Legend()\r\n      chart.legend.position = 'right'\r\n      chart.legend.width = am4core.percent(40)\r\n      chart.legend.paddingLeft = '20px'\r\n    } else {\r\n      valueAxis.renderer.disabled = true\r\n    }\r\n\r\n    return (() => {\r\n      if (chart) {\r\n        chart.dispose()\r\n      }\r\n    })\r\n\r\n  }, [productData])\r\n\r\n  return (\r\n    <div id='products-barchart-div' style={{ width: '100%', height: '100vh', paddingTop: '2em' }}></div>\r\n  )\r\n\r\n}\r\n\r\nexport default ExportsChart\r\n","import axios from 'axios'\r\n\r\nconst getImports = async () => {\r\n  const response = await axios.get('/imports')\r\n  return response\r\n}\r\n\r\nconst getExports = async () => {\r\n  const response = await axios.get('/exports')\r\n  return response\r\n}\r\n\r\nconst getTradeBalance = async () => {\r\n  const response = await axios.get('/tradebalance')\r\n  return response\r\n}\r\n\r\nconst getProductData = async () => {\r\n  const response = await axios.get('/SITC1')\r\n  return response\r\n}\r\n\r\n\r\nexport default {\r\n  getImports,\r\n  getExports,\r\n  getTradeBalance,\r\n  getProductData\r\n}","import React, { useState, useEffect } from 'react'\nimport Map from './components/Map'\nimport Menu from './components/Menu'\nimport TradeBalanceChart from './components/TradeBalanceChart'\nimport ExportsBarChart from './components/ExportsBarChart'\nimport dataService from './services/DataService'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\nimport Spinner from 'react-bootstrap/Spinner'\nimport ScrollableAnchor from 'react-scrollable-anchor'\nimport { configureAnchors } from 'react-scrollable-anchor'\nimport './App.css'\n\n//configureAnchors({ offset: -50 })\n\nconst App = () => {\n\n  const [imports, setImports] = useState([])\n  const [exports, setExports] = useState([])\n  const [tradeBalance, setTradeBalance] = useState([])\n\n  const [productData, setProductData] = useState([])\n\n  const [flow, setFlow] = useState('exports')\n\n  useEffect(() => {\n    dataService.getImports().then(res => {\n      console.log(res.data)\n      setImports(res.data)\n    })\n    dataService.getExports().then(res => {\n      console.log(res.data)\n      setExports(res.data)\n    })\n    dataService.getTradeBalance().then(res => {\n      console.log(res.data)\n      setTradeBalance(res.data)\n    })\n    dataService.getProductData().then(res => {\n      console.log(res.data)\n      setProductData(res.data)\n    })\n  }, [])\n\n  console.log('Flow: ', flow)\n  return (\n    <div style={{ backgroundColor: '#343A40' }}>\n      <Container fluid={'true'} style={{ paddingLeft: 0, paddingRight: 0 }}>\n        <Navbar bg='dark' variant='dark' expand='md'  >\n          <Navbar.Brand href='/'>Finnish Foreign Trade Visualized</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#trade-partners\">Trade Partners</Nav.Link>\n              <Nav.Link href=\"#trade-balance\">Trade Balance</Nav.Link>\n              <Nav.Link href=\"#by-product\">Products</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        {(imports.length === 0 || exports.length === 0) &&\n          <div className='section' style={{ height: '100vh' }}>\n            <Spinner animation=\"border\" variant=\"light\" />\n          </div>\n        }\n        {(imports.length > 0 && exports.length > 0) &&\n          <div>\n            <ScrollableAnchor id={'trade-partners'}>\n              <div className='section' style={{ position: 'relative', height: 'calc(100vh - 50px)' }}>\n                <Map\n                  imports={imports}\n                  exports={exports}\n                  flow={flow}\n                />\n                <Menu setFlow={setFlow} />\n                <a href='#trade-balance' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down' ></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n\n            <ScrollableAnchor id={'trade-balance'}>\n              <div className='section' style={{ height: '100vh', backgroundColor: '#555', position: 'relative', padding: '0 0 3em 0' }}>\n                <TradeBalanceChart tradeBalance={tradeBalance} />\n                <a href='#by-product' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n\n            <ScrollableAnchor id={'by-product'}>\n              <div className='section' style={{ height: '100vh', backgroundColor: '#333', position: 'relative', padding: '0 0 3em 0' }}>\n                <ExportsBarChart productData={productData} />\n              </div>\n            </ScrollableAnchor>\n          </div>\n        }\n        <Navbar bg='dark' variant='dark' expand='lg'>\n          <Nav className='mr-auto'>\n            <Nav.Link href='#'>About</Nav.Link>\n          </Nav>\n        </Navbar>\n      </Container>\n\n    </div >\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}