{"version":3,"sources":["components/Map.js","components/TradeBalanceChart.js","components/ExportsBarChart.js","services/DataService.js","App.js","index.js"],"names":["Map","imports","exports","flow","values","year","colorIndex","hoverColor","useEffect","am4core","am4themes_dark","map","am4maps","geodata","am4geodata_worldLow","projection","Miller","zoomControl","backgroundSeries","mapPolygons","template","polygon","fill","fillOpacity","chartContainer","wheelable","window","innerHeight","innerWidth","homeZoomLevel","minZoomLevel","homeGeoPoint","latitude","longitude","maxPanOut","polygonSeries","series","push","heatRules","property","target","min","colors","getIndex","brighten","max","console","log","useGeodata","exclude","data","events","on","getPolygonById","polygonTemplate","tooltipText","nonScalingStroke","strokeWidth","states","create","properties","dispose","id","style","width","height","overflow","TradeBalanceChart","tradeBalance","am4themes_animated","am4themes_spiritedaway","chart","am4charts","marginRight","categoryAxis","yAxes","dataFields","category","numberFormatter","numberFormat","renderer","inversed","grid","location","cellStartLocation","cellEndLocation","valueAxis","xAxes","bigNumberPrefixes","opposite","importSeries","name","valueX","categoryY","columns","sequencedInterpolation","exportSeries","valueY","categoryX","ExportsChart","inside","labels","disabled","createSeries","field","stacked","getImports","a","axios","get","response","getExports","getTradeBalance","getImportsBySITC","getExportsBySITC","App","useState","setImports","setExports","setTradeBalance","setImportsSITC","exportsSITC","setExportsSITC","dataService","then","res","backgroundColor","fluid","paddingLeft","paddingRight","bg","variant","expand","marginLeft","Brand","href","length","className","position","bottom","padding","ExportsBarChart","Link","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8893f703.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport * as am4core from '@amcharts/amcharts4/core'\r\nimport * as am4maps from '@amcharts/amcharts4/maps'\r\nimport am4themes_dark from '@amcharts/amcharts4/themes/dark'\r\n//import am4themes_animated from '@amcharts/amcharts4/themes/animated'\r\nimport am4geodata_worldLow from '@amcharts/amcharts4-geodata/worldLow'\r\n\r\nconst Map = ({ imports, exports, flow, year }) => {\r\n\r\n  let values = null\r\n  let colorIndex = 1\r\n  let hoverColor = null\r\n\r\n  if (flow === 'exports') {\r\n    values = exports\r\n    colorIndex = 1\r\n    hoverColor = '#800000'\r\n  } else {\r\n    values = imports\r\n    colorIndex = 8\r\n    hoverColor = '#800000'\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    //am4core.useTheme(am4themes_animated)\r\n    am4core.useTheme(am4themes_dark)\r\n\r\n\r\n    let map = am4core.create('mapdiv', am4maps.MapChart)\r\n\r\n    map.geodata = am4geodata_worldLow\r\n    map.projection = new am4maps.projections.Miller()\r\n    //map.projection = new am4maps.projections.Orthographic()\r\n    //map.panBehavior = 'rotateLongLat'\r\n    map.zoomControl = new am4maps.ZoomControl()\r\n    map.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color('#EEE')\r\n    map.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 1\r\n    map.chartContainer.wheelable = false\r\n\r\n    //let graticuleSeries = map.series.push(new am4maps.GraticuleSeries())\r\n    //graticuleSeries.mapLines.template.line.stroke = am4core.color('#67b7dc')\r\n    //graticuleSeries.mapLines.template.line.strokeOpacity = 0.2\r\n    //graticuleSeries.fitExtent = false\r\n\r\n    // The initial zoom level must be higher if using portrait view.\r\n    if (window.innerHeight > window.innerWidth) {\r\n      map.homeZoomLevel = 5\r\n      map.minZoomLevel = 5\r\n    } else {\r\n      map.homeZoomLevel = 2\r\n      map.minZoomLevel = 2\r\n    }\r\n\r\n    map.homeGeoPoint = {\r\n      latitude: 50,\r\n      longitude: 11\r\n    }\r\n\r\n    map.maxPanOut = 0\r\n\r\n    let polygonSeries = map.series.push(new am4maps.MapPolygonSeries())\r\n\r\n    polygonSeries.heatRules.push({\r\n      property: 'fill',\r\n      target: polygonSeries.mapPolygons.template,\r\n      min: map.colors.getIndex(colorIndex).brighten(2.0),\r\n      max: map.colors.getIndex(colorIndex).brighten(-0.8)\r\n    })\r\n\r\n    console.log(colorIndex)\r\n    polygonSeries.useGeodata = true\r\n    polygonSeries.exclude = ['AQ', 'SJ']\r\n\r\n    polygonSeries.data = values\r\n\r\n    map.events.on(\"ready\", () => {\r\n      let finland = polygonSeries.getPolygonById(\"FI\")\r\n      finland.fill = am4core.color('#FFF')\r\n    })\r\n\r\n\r\n    let polygonTemplate = polygonSeries.mapPolygons.template\r\n    polygonTemplate.tooltipText = `{name}: {euros} €`\r\n    polygonTemplate.nonScalingStroke = true\r\n    polygonTemplate.strokeWidth = 0.5\r\n\r\n    let hs = polygonTemplate.states.create('hover')\r\n    hs.properties.fill = am4core.color(hoverColor)\r\n\r\n    return (() => {\r\n      if (map) {\r\n        map.dispose()\r\n      }\r\n    })\r\n\r\n    /* let heatLegend = map.createChild(am4maps.HeatLegend)\r\n    heatLegend.series = polygonSeries\r\n    heatLegend.width = am4core.percent(100)\r\n    heatLegend.orientation = 'vertical' */\r\n\r\n  }, [values, colorIndex, hoverColor])\r\n\r\n  return (\r\n    <div id='mapdiv' style={{ width: '100%', height: '100%', overflow: 'hidden' }}></div>\r\n  )\r\n}\r\n\r\nexport default Map","import React, { useEffect } from 'react'\r\nimport * as am4core from '@amcharts/amcharts4/core'\r\nimport * as am4charts from '@amcharts/amcharts4/charts'\r\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated'\r\nimport am4themes_spiritedaway from '@amcharts/amcharts4/themes/spiritedaway'\r\n\r\n\r\nconst TradeBalanceChart = ({ tradeBalance }) => {\r\n\r\n  useEffect(() => {\r\n\r\n    am4core.useTheme(am4themes_animated)\r\n    am4core.useTheme(am4themes_spiritedaway)\r\n\r\n    let chart = am4core.create('chartdiv', am4charts.XYChart)\r\n    chart.data = tradeBalance\r\n    chart.marginRight = '100'\r\n\r\n    if (window.innerHeight > window.innerWidth) {\r\n      let categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis())\r\n      categoryAxis.dataFields.category = 'year'\r\n      categoryAxis.numberFormatter.numberFormat = '#'\r\n      categoryAxis.renderer.inversed = true\r\n      categoryAxis.renderer.grid.template.location = 0\r\n      categoryAxis.renderer.cellStartLocation = 0.1\r\n      categoryAxis.renderer.cellEndLocation = 0.9\r\n\r\n      let valueAxis = chart.xAxes.push(new am4charts.ValueAxis())\r\n      valueAxis.min = 0\r\n      valueAxis.numberFormatter.numberFormat = '##.##a'\r\n      valueAxis.numberFormatter.bigNumberPrefixes = [\r\n        { 'number': 1e+9, 'suffix': 'B' }\r\n      ]\r\n\r\n      valueAxis.renderer.opposite = true\r\n\r\n      let importSeries = chart.series.push(new am4charts.ColumnSeries())\r\n      importSeries.name = 'Imports'\r\n      importSeries.fill = am4core.color('#63718B')\r\n      importSeries.strokeWidth = 0\r\n      importSeries.dataFields.valueX = 'imports'\r\n      importSeries.dataFields.categoryY = 'year'\r\n      importSeries.columns.template.height = am4core.percent(100)\r\n      importSeries.sequencedInterpolation = true\r\n      importSeries.columns.template.tooltipText = '{name}: €{valueX}'\r\n\r\n      let exportSeries = chart.series.push(new am4charts.ColumnSeries())\r\n      exportSeries.name = 'Exports'\r\n      exportSeries.fill = am4core.color('#EBA05C')\r\n      exportSeries.strokeWidth = 0\r\n      exportSeries.dataFields.valueX = 'exports'\r\n      exportSeries.dataFields.categoryY = 'year'\r\n      exportSeries.columns.template.height = am4core.percent(100)\r\n      exportSeries.sequencedInterpolation = true\r\n      exportSeries.columns.template.tooltipText = '{name}: €{valueX}'\r\n    } else {\r\n      let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\r\n      categoryAxis.dataFields.category = 'year'\r\n      categoryAxis.numberFormatter.numberFormat = '#'\r\n      categoryAxis.renderer.inversed = true\r\n      categoryAxis.renderer.grid.template.location = 0\r\n      categoryAxis.renderer.cellStartLocation = 0.1\r\n      categoryAxis.renderer.cellEndLocation = 0.9\r\n\r\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\r\n      valueAxis.min = 0\r\n      valueAxis.numberFormatter.numberFormat = '##.##a'\r\n      valueAxis.numberFormatter.bigNumberPrefixes = [\r\n        { 'number': 1e+9, 'suffix': 'B' }\r\n      ]\r\n\r\n      let importSeries = chart.series.push(new am4charts.ColumnSeries())\r\n      importSeries.name = 'Imports'\r\n      importSeries.fill = am4core.color('#63718B')\r\n      importSeries.strokeWidth = 0\r\n      importSeries.dataFields.valueY = 'imports'\r\n      importSeries.dataFields.categoryX = 'year'\r\n      importSeries.columns.template.height = am4core.percent(100)\r\n      importSeries.sequencedInterpolation = true\r\n      importSeries.columns.template.tooltipText = '{name}: €{valueY}'\r\n\r\n      let exportSeries = chart.series.push(new am4charts.ColumnSeries())\r\n      exportSeries.name = 'Exports'\r\n      exportSeries.fill = am4core.color('#EBA05C')\r\n      exportSeries.strokeWidth = 0\r\n      exportSeries.dataFields.valueY = 'exports'\r\n      exportSeries.dataFields.categoryX = 'year'\r\n      exportSeries.columns.template.height = am4core.percent(100)\r\n      exportSeries.sequencedInterpolation = true\r\n      exportSeries.columns.template.tooltipText = '{name}: €{valueY}'\r\n\r\n    }\r\n\r\n    return (() => {\r\n      if (chart) {\r\n        chart.dispose()\r\n      }\r\n    })\r\n\r\n  }, [tradeBalance])\r\n\r\n  return (\r\n    <div id='chartdiv' style={{ width: '100%', height: '100%', overflow: 'hidden' }}></div>\r\n  )\r\n\r\n}\r\n\r\nexport default TradeBalanceChart","import React, { useEffect } from 'react'\r\nimport * as am4core from '@amcharts/amcharts4/core'\r\nimport * as am4charts from '@amcharts/amcharts4/charts'\r\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated'\r\nimport am4themes_spiritedaway from '@amcharts/amcharts4/themes/spiritedaway'\r\n\r\nconst ExportsChart = ({ exports }) => {\r\n\r\n  useEffect(() => {\r\n\r\n    am4core.useTheme(am4themes_animated)\r\n    am4core.useTheme(am4themes_spiritedaway)\r\n\r\n    let chart = am4core.create(\"exports-barchart-div\", am4charts.XYChart);\r\n\r\n    chart.data = exports\r\n\r\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\r\n    categoryAxis.dataFields.category = \"flow\"\r\n    categoryAxis.renderer.grid.template.location = 0\r\n\r\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\r\n    valueAxis.renderer.inside = true\r\n    valueAxis.renderer.labels.template.disabled = true\r\n    valueAxis.min = 0\r\n\r\n    const createSeries = (field) => {\r\n      let series = chart.series.push(new am4charts.ColumnSeries())\r\n      series.name = field\r\n      series.dataFields.valueY = field\r\n      series.dataFields.categoryX = \"flow\"\r\n      series.sequencedInterpolation = true\r\n      series.stacked = true\r\n      series.columns.template.height = am4core.percent(100)\r\n      series.columns.template.width = am4core.percent(40)\r\n      series.columns.template.tooltipText = \"[bold]{name}[/]\\n{valueY} €\"\r\n\r\n      return series\r\n    }\r\n\r\n    createSeries(\"Food and live animals\")\r\n    createSeries(\"Beverages and tobacco\")\r\n    createSeries(\"Crude materials,inedible,except fuels\")\r\n    createSeries(\"Mineral fuels etc\")\r\n    createSeries(\"Animal and vegetable oils and fats\")\r\n    createSeries(\"Chemicals and related products,n.e.s.\")\r\n    createSeries(\"Basic manufactures\")\r\n    createSeries(\"Machinery,transport equipment\")\r\n    createSeries(\"Miscellaneous manufactured articles\")\r\n    createSeries(\"Goods not classified elsewhere\")\r\n\r\n    // Legend\r\n    // chart.legend = new am4charts.Legend();\r\n\r\n    return (() => {\r\n      if (chart) {\r\n        chart.dispose()\r\n      }\r\n    })\r\n\r\n  }, [exports])\r\n\r\n  return (\r\n    <div id='exports-barchart-div' style={{ width: '100%', height: '100vh' }}></div>\r\n  )\r\n\r\n}\r\n\r\nexport default ExportsChart\r\n","import axios from 'axios'\r\n\r\nconst getImports = async () => {\r\n  const response = await axios.get('/imports')\r\n  return response\r\n}\r\n\r\nconst getExports = async () => {\r\n  const response = await axios.get('/exports')\r\n  return response\r\n}\r\n\r\nconst getTradeBalance = async () => {\r\n  const response = await axios.get('/tradebalance')\r\n  return response\r\n}\r\n\r\nconst getImportsBySITC = async () => {\r\n  const response = await axios.get('/imports/SITC1')\r\n  return response\r\n}\r\n\r\nconst getExportsBySITC = async () => {\r\n  const response = await axios.get('/exports/SITC1')\r\n  return response\r\n}\r\n\r\n\r\nexport default {\r\n  getImports,\r\n  getExports,\r\n  getTradeBalance,\r\n  getImportsBySITC,\r\n  getExportsBySITC\r\n}","import React, { useState, useEffect } from 'react'\nimport Map from './components/Map'\nimport Menu from './components/Menu'\nimport TradeBalanceChart from './components/TradeBalanceChart'\nimport ExportsChart from './components/ExportsChart'\nimport ImportsChart from './components/ImportsChart'\nimport ExportsBarChart from './components/ExportsBarChart'\nimport dataService from './services/DataService'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Spinner from 'react-bootstrap/Spinner'\nimport ScrollableAnchor from 'react-scrollable-anchor'\nimport { configureAnchors } from 'react-scrollable-anchor'\nimport './App.css'\n\n//configureAnchors({ offset: -50 })\n\nconst App = () => {\n\n  const [imports, setImports] = useState([])\n  const [exports, setExports] = useState([])\n  const [tradeBalance, setTradeBalance] = useState([])\n\n  const [importsSITC, setImportsSITC] = useState([])\n  const [exportsSITC, setExportsSITC] = useState([])\n\n  const [flow, setFlow] = useState('exports')\n\n  useEffect(() => {\n    dataService.getImports().then(res => {\n      console.log(res.data)\n      setImports(res.data)\n    })\n    dataService.getExports().then(res => {\n      console.log(res.data)\n      setExports(res.data)\n    })\n    dataService.getTradeBalance().then(res => {\n      console.log(res.data)\n      setTradeBalance(res.data)\n    })\n    dataService.getImportsBySITC().then(res => {\n      console.log(res.data)\n      setImportsSITC(res.data)\n    })\n    dataService.getExportsBySITC().then(res => {\n      console.log(res.data)\n      setExportsSITC(res.data)\n    })\n  }, [])\n\n  console.log('Flow: ', flow)\n  return (\n    <div style={{ backgroundColor: '#343A40' }}>\n      <Container fluid={'true'} style={{ paddingLeft: 0, paddingRight: 0 }}>\n        <Navbar bg='dark' variant='dark' expand='lg' style={{ marginLeft: 0, marginRight: 0 }} >\n          <Navbar.Brand href='#'>Finnish Foreign Trade Visualized</Navbar.Brand>\n        </Navbar>\n        {(imports.length > 0 && exports.length > 0) &&\n          <div>\n            <div className='section' style={{ position: 'relative', height: 'calc(100vh - 50px)' }}>\n              <Map\n                imports={imports}\n                exports={exports}\n                flow={flow}\n              />\n              <a href='#trade-balance' style={{ position: 'absolute', bottom: '2em' }}>\n                <div className='arrow-down' ></div>\n              </a>\n            </div>\n\n            <ScrollableAnchor id={'trade-balance'}>\n              <div className='section' style={{ height: '100vh', backgroundColor: '#555', position: 'relative', padding: '0 0 3em 0' }}>\n                <TradeBalanceChart tradeBalance={tradeBalance} />\n                <a href='#by-product' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n\n            <ScrollableAnchor id={'by-product'}>\n              <div className='section' style={{ height: '100vh', backgroundColor: '#333', position: 'relative', padding: '0 0 3em 0' }}>\n                <ExportsBarChart exports={exportsSITC} />\n              </div>\n            </ScrollableAnchor>\n          </div>\n        }\n        <Navbar bg='dark' variant='dark' expand='lg'>\n          <Nav className='mr-auto'>\n            <Nav.Link href='#'>About</Nav.Link>\n          </Nav>\n        </Navbar>\n      </Container>\n\n    </div >\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}