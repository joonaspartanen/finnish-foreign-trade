{"version":3,"sources":["components/Map.js","components/FlowButtons.js","components/TradeBalanceChart.js","components/ProductsTreeMap.js","services/dataService.js","components/CountryDataTable.js","components/CountryData.js","components/CountrySearch.js","components/NavBar.js","components/Footer.js","App.js","index.js"],"names":["Map","imports","exports","flow","values","year","color","hoverColor","useEffect","console","log","am4core","am4themes_dark","map","am4maps","geodata","am4geodata_worldLow","projection","Mercator","zoomControl","backgroundSeries","mapPolygons","template","polygon","fill","fillOpacity","chartContainer","wheelable","window","innerHeight","innerWidth","homeZoomLevel","minZoomLevel","homeGeoPoint","latitude","longitude","maxPanOut","polygonSeries","series","push","heatRules","property","target","min","brighten","max","useGeodata","exclude","data","polygonTemplate","tooltipText","nonScalingStroke","strokeWidth","events","on","finland","getPolygonById","states","create","properties","dispose","id","style","width","height","overflow","FlowButtons","setFlow","useState","exportsActive","setExportsActive","position","bottom","left","Button","Group","toggle","active","content","onClick","value","TradeBalanceChart","tradeBalance","am4themes_animated","am4themes_spiritedaway","chart","am4charts","marginRight","categoryAxis","yAxes","dataFields","category","numberFormatter","numberFormat","renderer","inversed","grid","location","cellStartLocation","cellEndLocation","valueAxis","xAxes","strictMinMax","bigNumberPrefixes","number","suffix","opposite","tradeBalanceSeries","name","valueX","categoryY","columns","sequencedInterpolation","adapter","add","dataItem","importSeries","exportSeries","valueY","categoryX","paddingTop","textAlign","Header","inverted","as","ProductsTreeMap","SITC2Data","attributes","children","seriesTemplates","legend","paddingRight","paddingLeft","a","async","axios","get","response","country","code","CountryDataTable","tradeData","Table","basic","celled","selectable","singleLine","Row","HeaderCell","colSpan","Body","slice","key","group","Cell","CountryData","setCountry","setCountryFilter","countryImports","setCountryImports","countryExports","setCountryExports","dataService","then","res","length","Dimmer","Loader","Grid","container","stackable","relaxed","icon","circular","top","Icon","size","Column","CountrySearch","handleCountryFilterChange","countryNames","setValue","isLoading","setIsLoading","results","setResults","Search","placeholder","loading","onResultSelect","e","result","title","onSearchChange","_","debounce","re","RegExp","escapeRegExp","foundResults","filter","test","leading","resultRenderer","NavBar","Menu","backgroundColor","marginBottom","Container","fluid","Item","header","link","href","Footer","secondary","marginTop","App","setImports","setExports","setTradeBalance","importsSITC2","setImportsSITC2","exportsSITC2","setExportsSITC2","countryFilter","countryCodes","setCountryCodes","className","padding","minHeight","countryName","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f21cf6c6.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4maps from '@amcharts/amcharts4/maps'\nimport am4themes_dark from '@amcharts/amcharts4/themes/dark'\n//import am4themes_animated from '@amcharts/amcharts4/themes/animated'\nimport am4geodata_worldLow from '@amcharts/amcharts4-geodata/worldLow'\n\nconst Map = ({ imports, exports, flow, year }) => {\n  let values = null\n  let color = '#5E5B78'\n  let hoverColor = '#4B0000'\n\n  if (flow === 'exports') {\n    values = exports\n    color = '#5E5B78'\n    hoverColor = '#4B0000'\n  } else {\n    values = imports\n    color = '#C17D80'\n    hoverColor = '#161331'\n  }\n\n  useEffect(() => {\n    console.log(flow)\n    console.log(exports)\n    console.log(imports)\n\n    //am4core.useTheme(am4themes_animated)\n    am4core.useTheme(am4themes_dark)\n\n    let map = am4core.create('mapdiv', am4maps.MapChart)\n\n    map.geodata = am4geodata_worldLow\n    map.projection = new am4maps.projections.Mercator()\n    //map.projection = new am4maps.projections.Orthographic()\n    //map.panBehavior = 'rotateLongLat'\n    map.zoomControl = new am4maps.ZoomControl()\n    map.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color('#EEE')\n    map.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 1\n    map.chartContainer.wheelable = false\n\n    //let graticuleSeries = map.series.push(new am4maps.GraticuleSeries())\n    //graticuleSeries.mapLines.template.line.stroke = am4core.color('#67b7dc')\n    //graticuleSeries.mapLines.template.line.strokeOpacity = 0.2\n    //graticuleSeries.fitExtent = false\n\n    // The initial zoom level must be higher if using portrait view.\n    if (window.innerHeight > window.innerWidth) {\n      map.homeZoomLevel = 5\n      map.minZoomLevel = 5\n    } else {\n      map.homeZoomLevel = 2\n      map.minZoomLevel = 2\n    }\n\n    map.homeGeoPoint = {\n      latitude: 50,\n      longitude: 11\n    }\n\n    map.maxPanOut = 0\n\n    let polygonSeries = map.series.push(new am4maps.MapPolygonSeries())\n\n    polygonSeries.heatRules.push({\n      property: 'fill',\n      target: polygonSeries.mapPolygons.template,\n      min: am4core.color(color).brighten(1.4),\n      max: am4core.color(color).brighten(-0.6)\n\n      //      min: map.colors.getIndex(colorIndex).brighten(2.0),\n      //      max: map.colors.getIndex(colorIndex).brighten(-0.8)\n    })\n\n    polygonSeries.useGeodata = true\n    polygonSeries.exclude = ['AQ', 'SJ']\n\n    polygonSeries.data = values\n\n    let polygonTemplate = polygonSeries.mapPolygons.template\n    polygonTemplate.tooltipText = `{name}: {euros} €`\n    polygonTemplate.nonScalingStroke = true\n    polygonTemplate.strokeWidth = 0.5\n\n    map.events.on('ready', () => {\n      let finland = polygonSeries.getPolygonById('FI')\n      finland.fill = am4core.color('#FFF')\n      finland.tooltipText = ''\n    })\n\n    let hs = polygonTemplate.states.create('hover')\n    hs.properties.fill = am4core.color(hoverColor)\n\n    return () => {\n      if (map) {\n        map.dispose()\n      }\n    }\n  }, [values, color, hoverColor, exports, imports, flow])\n\n  return <div id='mapdiv' style={{ width: '100%', height: '100%', overflow: 'hidden' }}></div>\n}\n\nexport default Map\n","import React, { useState } from 'react'\nimport { Button } from 'semantic-ui-react'\n\nconst FlowButtons = ({ setFlow }) => {\n  const [exportsActive, setExportsActive] = useState(true)\n\n  return (\n    <div style={{ position: 'absolute', bottom: '2em', left: '2em' }}>\n      <Button.Group>\n        <Button\n          toggle\n          active={exportsActive}\n          content='Exports'\n          onClick={value => {\n            if (!exportsActive) {\n              setExportsActive(true)\n              setFlow('exports')\n            }\n          }}\n        />\n        <Button\n          toggle\n          active={!exportsActive}\n          content='Imports'\n          onClick={value => {\n            if (exportsActive) {\n              setExportsActive(false)\n              setFlow('imports')\n            }\n          }}\n        />\n      </Button.Group>\n    </div>\n  )\n}\n\nexport default FlowButtons\n","import React, { useEffect } from 'react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated'\nimport am4themes_spiritedaway from '@amcharts/amcharts4/themes/spiritedaway'\nimport { Header } from 'semantic-ui-react'\n\nconst TradeBalanceChart = ({ tradeBalance }) => {\n  useEffect(() => {\n    am4core.useTheme(am4themes_animated)\n    am4core.useTheme(am4themes_spiritedaway)\n\n    let chart = am4core.create('chartdiv', am4charts.XYChart)\n    chart.data = tradeBalance\n    chart.marginRight = '100'\n\n    if (window.innerHeight > window.innerWidth) {\n      let categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.dataFields.category = 'year'\n      categoryAxis.numberFormatter.numberFormat = '#'\n      categoryAxis.renderer.inversed = true\n      categoryAxis.renderer.grid.template.location = 0\n      categoryAxis.renderer.cellStartLocation = 0.1\n      categoryAxis.renderer.cellEndLocation = 0.9\n\n      let valueAxis = chart.xAxes.push(new am4charts.ValueAxis())\n      valueAxis.min = -1000000000\n      valueAxis.strictMinMax = true\n      valueAxis.numberFormatter.numberFormat = '##.##a'\n      valueAxis.numberFormatter.bigNumberPrefixes = [{ number: 1e9, suffix: 'B' }]\n\n      valueAxis.renderer.opposite = true\n\n      let tradeBalanceSeries = chart.series.push(new am4charts.ColumnSeries())\n      tradeBalanceSeries.name = 'Trade Balance'\n      tradeBalanceSeries.fill = am4core.color('#2E8B57')\n      tradeBalanceSeries.strokeWidth = 0\n      tradeBalanceSeries.dataFields.valueX = 'tradeBalance'\n      tradeBalanceSeries.dataFields.categoryY = 'year'\n      tradeBalanceSeries.columns.template.height = am4core.percent(100)\n      tradeBalanceSeries.sequencedInterpolation = true\n      tradeBalanceSeries.columns.template.tooltipText = '{name}:\\n€{valueX}'\n\n      tradeBalanceSeries.columns.template.adapter.add('fill', (fill, target) => {\n        if (target.dataItem && target.dataItem.valueX < 0) {\n          return am4core.color('#800000')\n        } else {\n          return fill\n        }\n      })\n\n      let importSeries = chart.series.push(new am4charts.ColumnSeries())\n      importSeries.name = 'Imports to Finland (2018)'\n      importSeries.fill = am4core.color('#63718B')\n      importSeries.strokeWidth = 0\n      importSeries.dataFields.valueX = 'imports'\n      importSeries.dataFields.categoryY = 'year'\n      importSeries.columns.template.height = am4core.percent(100)\n      importSeries.sequencedInterpolation = true\n      importSeries.columns.template.tooltipText = '{name}:\\n€{valueX}'\n\n      let exportSeries = chart.series.push(new am4charts.ColumnSeries())\n      exportSeries.name = 'Exports from Finland (2018)'\n      exportSeries.fill = am4core.color('#EBA05C')\n      exportSeries.strokeWidth = 0\n      exportSeries.dataFields.valueX = 'exports'\n      exportSeries.dataFields.categoryY = 'year'\n      exportSeries.columns.template.height = am4core.percent(100)\n      exportSeries.sequencedInterpolation = true\n      exportSeries.columns.template.tooltipText = '{name}:\\n€{valueX}'\n    } else {\n      let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.dataFields.category = 'year'\n      categoryAxis.numberFormatter.numberFormat = '#'\n      categoryAxis.renderer.inversed = true\n      categoryAxis.renderer.grid.template.location = 0\n      categoryAxis.renderer.cellStartLocation = 0.1\n      categoryAxis.renderer.cellEndLocation = 0.9\n\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\n      // valueAxis.min = 0\n      valueAxis.numberFormatter.numberFormat = '##.##a'\n      valueAxis.numberFormatter.bigNumberPrefixes = [{ number: 1e9, suffix: 'B' }]\n\n      let tradeBalanceSeries = chart.series.push(new am4charts.ColumnSeries())\n      tradeBalanceSeries.name = 'Trade Balance'\n      tradeBalanceSeries.fill = am4core.color('#2E8B57')\n      tradeBalanceSeries.strokeWidth = 0\n      tradeBalanceSeries.dataFields.valueY = 'tradeBalance'\n      tradeBalanceSeries.dataFields.categoryX = 'year'\n      tradeBalanceSeries.columns.template.height = am4core.percent(100)\n      tradeBalanceSeries.sequencedInterpolation = true\n      tradeBalanceSeries.columns.template.tooltipText = '{name}:\\n€{valueY}'\n\n      tradeBalanceSeries.columns.template.adapter.add('fill', (fill, target) => {\n        if (target.dataItem && target.dataItem.valueY < 0) {\n          return am4core.color('#800000')\n        } else {\n          return fill\n        }\n      })\n\n      let importSeries = chart.series.push(new am4charts.ColumnSeries())\n      importSeries.name = 'Imports to Finland (2018)'\n      importSeries.fill = am4core.color('#63718B')\n      importSeries.strokeWidth = 0\n      importSeries.dataFields.valueY = 'imports'\n      importSeries.dataFields.categoryX = 'year'\n      importSeries.columns.template.height = am4core.percent(100)\n      importSeries.sequencedInterpolation = true\n      importSeries.columns.template.tooltipText = '{name}:\\n€{valueY}'\n\n      let exportSeries = chart.series.push(new am4charts.ColumnSeries())\n      exportSeries.name = 'Exports from Finland (2018)'\n      exportSeries.fill = am4core.color('#EBA05C')\n      exportSeries.strokeWidth = 0\n      exportSeries.dataFields.valueY = 'exports'\n      exportSeries.dataFields.categoryX = 'year'\n      exportSeries.columns.template.height = am4core.percent(100)\n      exportSeries.sequencedInterpolation = true\n      exportSeries.columns.template.tooltipText = '{name}:\\n€{valueY}'\n    }\n\n    return () => {\n      if (chart) {\n        chart.dispose()\n      }\n    }\n  }, [tradeBalance])\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        paddingTop: '3em',\n        textAlign: 'center'\n      }}>\n      <Header inverted as='h3'>\n        Finnish Trade Balance\n      </Header>\n      <div id='chartdiv' style={{ width: '100%', height: '95%' }}></div>\n    </div>\n  )\n}\n\nexport default TradeBalanceChart\n","import React, { useEffect } from 'react'\nimport { Header } from 'semantic-ui-react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated'\nimport am4themes_spiritedaway from '@amcharts/amcharts4/themes/spiritedaway'\n\nconst ProductsTreeMap = ({ SITC2Data, flow }) => {\n  const attributes = { id: `products-treemap-div-${flow}` }\n\n  useEffect(() => {\n    am4core.useTheme(am4themes_animated)\n    am4core.useTheme(am4themes_spiritedaway)\n    let chart = am4core.create(`products-treemap-div-${flow}`, am4charts.TreeMap)\n\n    chart.data = SITC2Data\n    chart.dataFields.value = 'value'\n    chart.dataFields.name = 'group'\n    chart.dataFields.children = 'children'\n\n    let level1 = chart.seriesTemplates.create('1')\n    let level1_column = level1.columns.template\n\n    level1_column.tooltipText = '{group}: {value} €'\n\n    // Show legend only in landscape view\n    if (window.innerHeight < window.innerWidth) {\n      chart.legend = new am4charts.Legend()\n      chart.legend.position = 'bottom'\n      chart.legend.paddingTop = 20\n    }\n\n    return () => {\n      if (chart) {\n        chart.dispose()\n      }\n    }\n  }, [SITC2Data, flow])\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100vh',\n        paddingTop: '3em',\n        paddingRight: '2em',\n        paddingLeft: '2em',\n        textAlign: 'center'\n      }}>\n      <Header inverted as='h3'>\n        Finnish {flow} by product category (2018)\n      </Header>\n      <div {...attributes} style={{ width: '100%', height: '95%' }}></div>\n    </div>\n  )\n}\n\nexport default ProductsTreeMap\n","import axios from 'axios'\n\nconst getImports = async () => {\n  const response = await axios.get('/imports')\n  return response\n}\n\nconst getExports = async () => {\n  const response = await axios.get('/exports')\n  return response\n}\n\nconst getTradeBalance = async () => {\n  const response = await axios.get('/tradebalance')\n  return response\n}\n\nconst getSITC2Data = async flow => {\n  const response = await axios.get(`/SITC2/${flow}`)\n  return response\n}\n\nconst getSITC2CountryData = async (flow, country) => {\n  const response = await axios.get(`/SITC2/${flow}/${country[0].code}`)\n  return response\n}\n\nconst getCountryCodes = async () => {\n  const response = await axios.get('/countries')\n  return response\n}\n\nexport default {\n  getImports,\n  getExports,\n  getTradeBalance,\n  getSITC2Data,\n  getSITC2CountryData,\n  getCountryCodes\n}\n","import React from 'react'\nimport { Table, Header } from 'semantic-ui-react'\n\nconst CountryDataTable = ({ country, tradeData, flow }) => {\n  return (\n    <Table inverted basic celled selectable singleLine>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell colSpan='2' textAlign='center'>\n            <Header as='h3' style={{ color: '#fff' }}>\n              Finland {flow} {country[0].name}\n            </Header>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {tradeData.slice(0, 10).map(a => (\n          <Table.Row key={a.group}>\n            <Table.Cell>{a.group}</Table.Cell>\n            <Table.Cell>{a.value} €</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  )\n}\n\nexport default CountryDataTable\n","import React, { useState, useEffect } from 'react'\nimport dataService from '../services/dataService'\n//import { Container, Row, Col, Button } from 'react-bootstrap'\nimport { Grid, Button, Icon, Dimmer, Loader } from 'semantic-ui-react'\nimport CountryDataTable from './CountryDataTable'\n\nconst CountryData = ({ country, setCountry, setCountryFilter }) => {\n  const [countryImports, setCountryImports] = useState([])\n  const [countryExports, setCountryExports] = useState([])\n\n  useEffect(() => {\n    dataService.getSITC2CountryData('imports', country).then(res => {\n      setCountryImports(res.data)\n    })\n    dataService.getSITC2CountryData('exports', country).then(res => {\n      setCountryExports(res.data)\n    })\n  }, [country])\n\n  if (country.length === 0) {\n    return null\n  }\n\n  if (countryImports.length === 0 && countryExports.length === 0) {\n    return (\n      <Dimmer active>\n        <Loader />\n      </Dimmer>\n    )\n  }\n\n  return (\n    <Grid container stackable relaxed>\n      <Button\n        icon\n        circular\n        onClick={() => {\n          setCountryFilter('')\n          setCountry([])\n        }}\n        style={{ position: 'absolute', top: '1em', left: '1em' }}>\n        <Icon name='angle left' size='large' />\n      </Button>\n      <Grid.Row columns={2}>\n        <Grid.Column>\n          <CountryDataTable country={country} tradeData={countryImports} flow={'imported from'} />\n        </Grid.Column>\n        <Grid.Column>\n          <CountryDataTable country={country} tradeData={countryExports} flow={'exported to'} />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default CountryData\n","import React, { useState } from 'react'\nimport { Search } from 'semantic-ui-react'\nimport _ from 'lodash'\n\nconst CountrySearch = ({ handleCountryFilterChange, countryNames }) => {\n  const [value, setValue] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [results, setResults] = useState([])\n\n  const resultRenderer = ({ title }) => <div>{title}</div>\n\n  const handleResultSelect = (e, { result }) => {\n    setValue(result.title)\n    handleCountryFilterChange(result.title)\n  }\n\n  const handleSearchChange = (e, { value }) => {\n    setIsLoading(true)\n    setValue(value)\n\n    setIsLoading(true)\n    setValue(value)\n\n    if (value.length < 1) {\n      setValue('')\n      setIsLoading(false)\n      setResults([])\n      return\n    }\n\n    const re = new RegExp(_.escapeRegExp(value), 'i')\n    const isMatch = result => re.test(result.title)\n\n    setIsLoading(false)\n\n    const foundResults = _.filter(countryNames, isMatch)\n\n    if (foundResults.length > 20) {\n      setResults([{ title: 'Please narrow down your search.' }])\n    } else {\n      setResults(foundResults)\n    }\n    if (results.length === 1) {\n      handleCountryFilterChange(results[0].title)\n    }\n    console.log(results)\n  }\n\n  return (\n    <Search\n      placeholder='Search...'\n      loading={isLoading}\n      onResultSelect={handleResultSelect}\n      onSearchChange={_.debounce(handleSearchChange, 500, {\n        leading: true\n      })}\n      results={results}\n      resultRenderer={resultRenderer}\n      value={value}></Search>\n  )\n}\n\nexport default CountrySearch\n","import React from 'react'\nimport { Container, Menu, Icon } from 'semantic-ui-react'\n\nconst NavBar = () => {\n  return (\n    <Menu inverted size='massive' style={{ backgroundColor: '#333', marginBottom: '0px' }}>\n      <Container fluid>\n        <Menu.Item header>\n          <Icon name='euro sign' size='large'></Icon>\n          Finnish Foreign Trade Visualized</Menu.Item>\n          <Menu.Item link as='a' href='#trade-map'>\n          Trade Map\n        </Menu.Item>\n        <Menu.Item link as='a' href='#trade-balance'>\n          Trade Balance\n        </Menu.Item>\n        <Menu.Item link as='a' href='#imports-by-product'>\n          By product group\n        </Menu.Item>\n        <Menu.Item link as='a' href='#trade-partners'>\n          By trade partner\n        </Menu.Item>\n      </Container>\n    </Menu>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\nimport { Container, Menu } from 'semantic-ui-react'\n\nconst Footer = () => {\n  return (\n    <Menu inverted secondary style={{ backgroundColor: '#333', marginTop: '0px' }}>\n      <Container fluid>\n        <Menu.Item link as='a' href='https://github.com/joonaspartanen/finnish-foreign-trade'>\n          About\n        </Menu.Item>\n      </Container>\n    </Menu>\n  )\n}\n\nexport default Footer\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Map from './components/Map'\nimport FlowButtons from './components/FlowButtons'\nimport TradeBalanceChart from './components/TradeBalanceChart'\nimport ProductsTreeMap from './components/ProductsTreeMap'\nimport CountryData from './components/CountryData'\nimport CountrySearch from './components/CountrySearch'\nimport NavBar from './components/NavBar'\nimport Footer from './components/Footer'\n\nimport dataService from './services/dataService'\nimport { Container, Dimmer, Loader } from 'semantic-ui-react'\n\nimport ScrollableAnchor from 'react-scrollable-anchor'\n\n//configureAnchors({ offset: -50 })\n\nconst App = () => {\n  const [imports, setImports] = useState([])\n  const [exports, setExports] = useState([])\n  const [tradeBalance, setTradeBalance] = useState([])\n  const [importsSITC2, setImportsSITC2] = useState([])\n  const [exportsSITC2, setExportsSITC2] = useState([])\n  const [flow, setFlow] = useState('exports')\n  const [country, setCountry] = useState([])\n  const [countryFilter, setCountryFilter] = useState('')\n\n  const [countryCodes, setCountryCodes] = useState([])\n\n  const handleCountryFilterChange = countryName => {\n    setCountryFilter(countryName)\n    const country = countryCodes.filter(c => c.name === countryName)\n    setCountry(country)\n  }\n\n  useEffect(() => {\n    dataService.getImports().then(res => {\n      setImports(res.data)\n    })\n    dataService.getExports().then(res => {\n      setExports(res.data)\n    })\n    dataService.getTradeBalance().then(res => {\n      setTradeBalance(res.data)\n    })\n    dataService.getSITC2Data('imports').then(res => {\n      setImportsSITC2(res.data)\n    })\n    dataService.getSITC2Data('exports').then(res => {\n      setExportsSITC2(res.data)\n    })\n    dataService.getCountryCodes().then(res => {\n      setCountryCodes(res.data)\n    })\n  }, [])\n\n  console.log('Flow: ', flow)\n  return (\n    <div style={{ backgroundColor: '#333' }}>\n      <Container fluid style={{ paddingLeft: 0, paddingRight: 0 }}>\n        <NavBar />\n        {(imports.length === 0 || exports.length === 0) && (\n          <Dimmer active>\n            <Loader />\n          </Dimmer>\n        )}\n        {imports.length > 0 && exports.length > 0 && (\n          <div>\n            <ScrollableAnchor id={'trade-map'}>\n              <div\n                className='section'\n                style={{\n                  position: 'relative',\n                  height: 'calc(100vh - 60px)',\n                  backgroundColor: '#333'\n                }}>\n                <Map imports={imports} exports={exports} flow={flow} />\n                <FlowButtons setFlow={setFlow} />\n                <a href='#trade-balance' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n            <ScrollableAnchor id={'trade-balance'}>\n              <div\n                className='section'\n                style={{\n                  height: '100vh',\n                  backgroundColor: '#333',\n                  position: 'relative',\n                  padding: '0 0 3em 0'\n                }}>\n                <TradeBalanceChart tradeBalance={tradeBalance} />\n                <a href='#imports-by-product' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n            <ScrollableAnchor id={'imports-by-product'}>\n              <div\n                className='section'\n                style={{\n                  height: '100vh',\n                  backgroundColor: '#222',\n                  position: 'relative',\n                  padding: '0 0 3em 0'\n                }}>\n                <ProductsTreeMap SITC2Data={importsSITC2} flow={'imports'} />\n                <a href='#exports-by-product' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n            <ScrollableAnchor id={'exports-by-product'}>\n              <div\n                className='section'\n                style={{\n                  height: '100vh',\n                  backgroundColor: '#333',\n                  position: 'relative',\n                  padding: '0 0 3em 0'\n                }}>\n                <ProductsTreeMap SITC2Data={exportsSITC2} flow={'exports'} />\n                <a href='#trade-partners' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n            <ScrollableAnchor id={'trade-partners'}>\n              <div\n                className='section'\n                style={{\n                  minHeight: 'calc(100vh - 40px)',\n                  backgroundColor: '#222',\n                  position: 'relative',\n                  padding: '0 0 3em 0'\n                }}>\n                {country.length === 0 && (\n                  <CountrySearch\n                    countryFilter={countryFilter}\n                    handleCountryFilterChange={handleCountryFilterChange}\n                    countryNames={countryCodes.map(c => ({\n                      title: c.name,\n                      key: c.code\n                    }))}></CountrySearch>\n                )}\n                {country.length !== 0 && (\n                  <CountryData\n                    country={country}\n                    setCountry={setCountry}\n                    setCountryFilter={setCountryFilter}></CountryData>\n                )}\n              </div>\n            </ScrollableAnchor>\n          </div>\n        )}\n        <Footer></Footer>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}