{"version":3,"sources":["components/Map.js","components/Menu.js","components/TradeBalanceChart.js","components/ProductsTreeMap.js","services/dataService.js","components/CountryDataTable.js","components/CountryData.js","components/CountrySearch.js","components/NavBar.js","components/Footer.js","App.js","index.js"],"names":["Map","imports","exports","flow","values","year","color","hoverColor","useEffect","am4core","am4themes_dark","map","am4maps","geodata","am4geodata_worldLow","projection","Mercator","zoomControl","backgroundSeries","mapPolygons","template","polygon","fill","fillOpacity","chartContainer","wheelable","window","innerHeight","innerWidth","homeZoomLevel","minZoomLevel","homeGeoPoint","latitude","longitude","maxPanOut","polygonSeries","series","push","heatRules","property","target","min","brighten","max","useGeodata","exclude","data","polygonTemplate","tooltipText","nonScalingStroke","strokeWidth","events","on","finland","getPolygonById","states","create","properties","dispose","id","style","width","height","overflow","Menu","setFlow","position","bottom","left","toggle","name","variant","onClick","value","TradeBalanceChart","tradeBalance","am4themes_animated","am4themes_spiritedaway","chart","am4charts","marginRight","categoryAxis","yAxes","dataFields","category","numberFormatter","numberFormat","renderer","inversed","grid","location","cellStartLocation","cellEndLocation","valueAxis","xAxes","strictMinMax","bigNumberPrefixes","number","suffix","opposite","tradeBalanceSeries","valueX","categoryY","columns","sequencedInterpolation","adapter","add","dataItem","importSeries","exportSeries","valueY","categoryX","paddingTop","ProductsTreeMap","SITC2Data","attributes","children","seriesTemplates","legend","paddingRight","paddingLeft","textAlign","Header","inverted","as","a","async","axios","get","response","country","code","CountryDataTable","tradeData","Table","basic","celled","selectable","singleLine","Row","HeaderCell","colSpan","Body","slice","key","group","Cell","CountryData","setCountry","setCountryFilter","useState","countryImports","setCountryImports","countryExports","setCountryExports","dataService","then","res","length","Dimmer","active","Loader","Grid","container","stackable","relaxed","Button","icon","top","Icon","size","Column","CountrySearch","countryFilter","handleCountryFilterChange","Input","placeholder","onChange","event","console","log","NavBar","backgroundColor","marginBottom","Container","fluid","Item","header","link","href","Footer","secondary","marginTop","App","setImports","setExports","setTradeBalance","importsSITC2","setImportsSITC2","exportsSITC2","setExportsSITC2","countryCodes","setCountryCodes","className","animation","padding","minHeight","countryName","filter","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b516375d.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4maps from '@amcharts/amcharts4/maps'\nimport am4themes_dark from '@amcharts/amcharts4/themes/dark'\n//import am4themes_animated from '@amcharts/amcharts4/themes/animated'\nimport am4geodata_worldLow from '@amcharts/amcharts4-geodata/worldLow'\n\nconst Map = ({ imports, exports, flow, year }) => {\n\n  let values = null\n  let color = '#5E5B78'\n  let hoverColor = '#4B0000'\n\n  if (flow === 'exports') {\n    values = exports\n    color = '#5E5B78'\n    hoverColor = '#4B0000'\n  } else {\n    values = imports\n    color = '#C17D80'\n    hoverColor = '#161331'\n  }\n\n  useEffect(() => {\n\n    //am4core.useTheme(am4themes_animated)\n    am4core.useTheme(am4themes_dark)\n\n    let map = am4core.create('mapdiv', am4maps.MapChart)\n\n    map.geodata = am4geodata_worldLow\n    map.projection = new am4maps.projections.Mercator()\n    //map.projection = new am4maps.projections.Orthographic()\n    //map.panBehavior = 'rotateLongLat'\n    map.zoomControl = new am4maps.ZoomControl()\n    map.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color('#EEE')\n    map.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 1\n    map.chartContainer.wheelable = false\n\n    //let graticuleSeries = map.series.push(new am4maps.GraticuleSeries())\n    //graticuleSeries.mapLines.template.line.stroke = am4core.color('#67b7dc')\n    //graticuleSeries.mapLines.template.line.strokeOpacity = 0.2\n    //graticuleSeries.fitExtent = false\n\n    // The initial zoom level must be higher if using portrait view.\n    if (window.innerHeight > window.innerWidth) {\n      map.homeZoomLevel = 5\n      map.minZoomLevel = 5\n    } else {\n      map.homeZoomLevel = 2\n      map.minZoomLevel = 2\n    }\n\n    map.homeGeoPoint = {\n      latitude: 50,\n      longitude: 11\n    }\n\n    map.maxPanOut = 0\n\n    let polygonSeries = map.series.push(new am4maps.MapPolygonSeries())\n\n    polygonSeries.heatRules.push({\n      property: 'fill',\n      target: polygonSeries.mapPolygons.template,\n      min: am4core.color(color).brighten(1.4),\n      max: am4core.color(color).brighten(-0.6)\n\n      //      min: map.colors.getIndex(colorIndex).brighten(2.0),\n      //      max: map.colors.getIndex(colorIndex).brighten(-0.8)\n    })\n\n    polygonSeries.useGeodata = true\n    polygonSeries.exclude = ['AQ', 'SJ']\n\n    polygonSeries.data = values\n\n    let polygonTemplate = polygonSeries.mapPolygons.template\n    polygonTemplate.tooltipText = `{name}: {euros} €`\n    polygonTemplate.nonScalingStroke = true\n    polygonTemplate.strokeWidth = 0.5\n\n    map.events.on(\"ready\", () => {\n      let finland = polygonSeries.getPolygonById(\"FI\")\n      finland.fill = am4core.color('#FFF')\n      finland.tooltipText = ''\n    })\n\n    let hs = polygonTemplate.states.create('hover')\n    hs.properties.fill = am4core.color(hoverColor)\n\n    return (() => {\n      if (map) {\n        map.dispose()\n      }\n    })\n  }, [values, color, hoverColor])\n\n  return (\n    <div id='mapdiv' style={{ width: '100%', height: '100%', overflow: 'hidden' }}></div>\n  )\n}\n\nexport default Map","import React from 'react'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\n\nconst Menu = ({ setFlow }) => {\n\n\n  return (\n    <div style={{ position: 'absolute', bottom: '2em', left: '2em' }}>\n      <ToggleButtonGroup\n        toggle='true'\n        name='change-flow'>\n        <ToggleButton\n          variant='primary'\n          onClick={(value) => setFlow('exports')}>\n          Exports 2018\n        </ToggleButton>\n        <ToggleButton\n          variant='secondary'\n          onClick={(value) => setFlow('imports')}>\n          Imports 2018\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </div >\n  )\n}\n\nexport default Menu","import React, { useEffect } from 'react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated'\nimport am4themes_spiritedaway from '@amcharts/amcharts4/themes/spiritedaway'\n\nconst TradeBalanceChart = ({ tradeBalance }) => {\n  useEffect(() => {\n    am4core.useTheme(am4themes_animated)\n    am4core.useTheme(am4themes_spiritedaway)\n\n    let chart = am4core.create('chartdiv', am4charts.XYChart)\n    chart.data = tradeBalance\n    chart.marginRight = '100'\n\n    if (window.innerHeight > window.innerWidth) {\n      let categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.dataFields.category = 'year'\n      categoryAxis.numberFormatter.numberFormat = '#'\n      categoryAxis.renderer.inversed = true\n      categoryAxis.renderer.grid.template.location = 0\n      categoryAxis.renderer.cellStartLocation = 0.1\n      categoryAxis.renderer.cellEndLocation = 0.9\n\n      let valueAxis = chart.xAxes.push(new am4charts.ValueAxis())\n      valueAxis.min = -1000000000\n      valueAxis.strictMinMax = true\n      valueAxis.numberFormatter.numberFormat = '##.##a'\n      valueAxis.numberFormatter.bigNumberPrefixes = [{ number: 1e9, suffix: 'B' }]\n\n      valueAxis.renderer.opposite = true\n\n      let tradeBalanceSeries = chart.series.push(new am4charts.ColumnSeries())\n      tradeBalanceSeries.name = 'Trade Balance'\n      tradeBalanceSeries.fill = am4core.color('#2E8B57')\n      tradeBalanceSeries.strokeWidth = 0\n      tradeBalanceSeries.dataFields.valueX = 'tradeBalance'\n      tradeBalanceSeries.dataFields.categoryY = 'year'\n      tradeBalanceSeries.columns.template.height = am4core.percent(100)\n      tradeBalanceSeries.sequencedInterpolation = true\n      tradeBalanceSeries.columns.template.tooltipText = '{name}:\\n€{valueX}'\n\n      tradeBalanceSeries.columns.template.adapter.add('fill', (fill, target) => {\n        if (target.dataItem && target.dataItem.valueX < 0) {\n          return am4core.color('#800000')\n        } else {\n          return fill\n        }\n      })\n\n      let importSeries = chart.series.push(new am4charts.ColumnSeries())\n      importSeries.name = 'Imports to Finland (2018)'\n      importSeries.fill = am4core.color('#63718B')\n      importSeries.strokeWidth = 0\n      importSeries.dataFields.valueX = 'imports'\n      importSeries.dataFields.categoryY = 'year'\n      importSeries.columns.template.height = am4core.percent(100)\n      importSeries.sequencedInterpolation = true\n      importSeries.columns.template.tooltipText = '{name}:\\n€{valueX}'\n\n      let exportSeries = chart.series.push(new am4charts.ColumnSeries())\n      exportSeries.name = 'Exports from Finland (2018)'\n      exportSeries.fill = am4core.color('#EBA05C')\n      exportSeries.strokeWidth = 0\n      exportSeries.dataFields.valueX = 'exports'\n      exportSeries.dataFields.categoryY = 'year'\n      exportSeries.columns.template.height = am4core.percent(100)\n      exportSeries.sequencedInterpolation = true\n      exportSeries.columns.template.tooltipText = '{name}:\\n€{valueX}'\n    } else {\n      let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.dataFields.category = 'year'\n      categoryAxis.numberFormatter.numberFormat = '#'\n      categoryAxis.renderer.inversed = true\n      categoryAxis.renderer.grid.template.location = 0\n      categoryAxis.renderer.cellStartLocation = 0.1\n      categoryAxis.renderer.cellEndLocation = 0.9\n\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\n      // valueAxis.min = 0\n      valueAxis.numberFormatter.numberFormat = '##.##a'\n      valueAxis.numberFormatter.bigNumberPrefixes = [{ number: 1e9, suffix: 'B' }]\n\n      let tradeBalanceSeries = chart.series.push(new am4charts.ColumnSeries())\n      tradeBalanceSeries.name = 'Trade Balance'\n      tradeBalanceSeries.fill = am4core.color('#2E8B57')\n      tradeBalanceSeries.strokeWidth = 0\n      tradeBalanceSeries.dataFields.valueY = 'tradeBalance'\n      tradeBalanceSeries.dataFields.categoryX = 'year'\n      tradeBalanceSeries.columns.template.height = am4core.percent(100)\n      tradeBalanceSeries.sequencedInterpolation = true\n      tradeBalanceSeries.columns.template.tooltipText = '{name}:\\n€{valueY}'\n\n      tradeBalanceSeries.columns.template.adapter.add('fill', (fill, target) => {\n        if (target.dataItem && target.dataItem.valueY < 0) {\n          return am4core.color('#800000')\n        } else {\n          return fill\n        }\n      })\n\n      let importSeries = chart.series.push(new am4charts.ColumnSeries())\n      importSeries.name = 'Imports to Finland (2018)'\n      importSeries.fill = am4core.color('#63718B')\n      importSeries.strokeWidth = 0\n      importSeries.dataFields.valueY = 'imports'\n      importSeries.dataFields.categoryX = 'year'\n      importSeries.columns.template.height = am4core.percent(100)\n      importSeries.sequencedInterpolation = true\n      importSeries.columns.template.tooltipText = '{name}:\\n€{valueY}'\n\n      let exportSeries = chart.series.push(new am4charts.ColumnSeries())\n      exportSeries.name = 'Exports from Finland (2018)'\n      exportSeries.fill = am4core.color('#EBA05C')\n      exportSeries.strokeWidth = 0\n      exportSeries.dataFields.valueY = 'exports'\n      exportSeries.dataFields.categoryX = 'year'\n      exportSeries.columns.template.height = am4core.percent(100)\n      exportSeries.sequencedInterpolation = true\n      exportSeries.columns.template.tooltipText = '{name}:\\n€{valueY}'\n    }\n\n    return () => {\n      if (chart) {\n        chart.dispose()\n      }\n    }\n  }, [tradeBalance])\n\n  return <div id='chartdiv' style={{ width: '100%', height: '100%', overflow: 'hidden', paddingTop: '3em' }}></div>\n}\n\nexport default TradeBalanceChart\n","import React, { useEffect } from 'react'\nimport { Header } from 'semantic-ui-react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated'\nimport am4themes_spiritedaway from '@amcharts/amcharts4/themes/spiritedaway'\n\nconst ProductsTreeMap = ({ SITC2Data, flow }) => {\n  const attributes = { id: `products-treemap-div-${flow}` }\n\n  useEffect(() => {\n    am4core.useTheme(am4themes_animated)\n    am4core.useTheme(am4themes_spiritedaway)\n    let chart = am4core.create(`products-treemap-div-${flow}`, am4charts.TreeMap)\n\n    chart.data = SITC2Data\n    chart.dataFields.value = 'value'\n    chart.dataFields.name = 'group'\n    chart.dataFields.children = 'children'\n\n    let level1 = chart.seriesTemplates.create('1')\n    let level1_column = level1.columns.template\n\n    level1_column.tooltipText = '{group}: {value} €'\n\n    // Show legend only in landscape view\n    if (window.innerHeight < window.innerWidth) {\n      chart.legend = new am4charts.Legend()\n      chart.legend.position = 'bottom'\n      chart.legend.paddingTop = 20\n    }\n\n    return () => {\n      if (chart) {\n        chart.dispose()\n      }\n    }\n  }, [SITC2Data, flow])\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100vh',\n        paddingTop: '3em',\n        paddingRight: '2em',\n        paddingLeft: '2em',\n        textAlign: 'center'\n      }}>\n      <Header inverted as='h3'>\n        Finnish {flow} by product category (2018)\n      </Header>\n      <div {...attributes} style={{ width: '100%', height: '95%' }}></div>\n    </div>\n  )\n}\n\nexport default ProductsTreeMap\n","import axios from 'axios'\n\nconst getImports = async () => {\n  const response = await axios.get('/imports')\n  return response\n}\n\nconst getExports = async () => {\n  const response = await axios.get('/exports')\n  return response\n}\n\nconst getTradeBalance = async () => {\n  const response = await axios.get('/tradebalance')\n  return response\n}\n\nconst getSITC2Data = async flow => {\n  const response = await axios.get(`/SITC2/${flow}`)\n  return response\n}\n\nconst getSITC2CountryData = async (flow, country) => {\n  const response = await axios.get(`/SITC2/${flow}/${country[0].code}`)\n  return response\n}\n\nconst getCountryCodes = async () => {\n  const response = await axios.get('/countries')\n  return response\n}\n\nexport default {\n  getImports,\n  getExports,\n  getTradeBalance,\n  getSITC2Data,\n  getSITC2CountryData,\n  getCountryCodes\n}\n","import React from 'react'\nimport { Table, Header } from 'semantic-ui-react'\n\nconst CountryDataTable = ({ country, tradeData, flow }) => {\n  return (\n    <Table inverted basic celled selectable singleLine>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell colSpan='2' textAlign='center'>\n            <Header as='h3' style={{ color: '#fff' }}>\n              Finland {flow} {country[0].name}\n            </Header>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {tradeData.slice(0, 10).map(a => (\n          <Table.Row key={a.group}>\n            <Table.Cell>{a.group}</Table.Cell>\n            <Table.Cell>{a.value} €</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  )\n}\n\nexport default CountryDataTable\n","import React, { useState, useEffect } from 'react'\nimport dataService from '../services/dataService'\n//import { Container, Row, Col, Button } from 'react-bootstrap'\nimport { Grid, Button, Icon, Dimmer, Loader, Table, Header } from 'semantic-ui-react'\nimport CountryDataTable from './CountryDataTable'\n\nconst CountryData = ({ country, setCountry, setCountryFilter }) => {\n  const [countryImports, setCountryImports] = useState([])\n  const [countryExports, setCountryExports] = useState([])\n\n  useEffect(() => {\n    dataService.getSITC2CountryData('imports', country).then(res => {\n      setCountryImports(res.data)\n    })\n    dataService.getSITC2CountryData('exports', country).then(res => {\n      setCountryExports(res.data)\n    })\n  }, [country])\n\n  if (country.length === 0) {\n    return null\n  }\n\n  if (countryImports.length === 0 || countryExports.length === 0) {\n    return (\n      <Dimmer active>\n        <Loader />\n      </Dimmer>\n    )\n  }\n\n  return (\n    <Grid container stackable relaxed>\n      <Button\n        icon\n        onClick={() => {\n          setCountryFilter('')\n          setCountry([])\n        }}\n        style={{ position: 'absolute', top: '1em', left: '1em' }}>\n        <Icon name='angle left' size='large' />\n      </Button>\n      <Grid.Row columns={2}>\n        <Grid.Column>\n          <CountryDataTable country={country} tradeData={countryImports} flow={'imported from'} />\n        </Grid.Column>\n        <Grid.Column>\n          <CountryDataTable country={country} tradeData={countryExports} flow={'exported to'} />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default CountryData\n","import React from 'react'\nimport { Form } from 'react-bootstrap'\nimport { Input } from 'semantic-ui-react'\n\nconst CountrySearch = ({ countryFilter, handleCountryFilterChange }) => {\n  return (\n    <Input\n      icon='search'\n      placeholder='Search...'\n      value={countryFilter}\n      onChange={event => {\n        console.log(event.target.value)\n        handleCountryFilterChange(event.target.value)\n      }}></Input>\n  )\n}\n\nexport default CountrySearch\n","import React from 'react'\nimport { Container, Menu, Icon } from 'semantic-ui-react'\n\nconst NavBar = () => {\n  return (\n    <Menu inverted size='massive' style={{ backgroundColor: '#333', marginBottom: '0px' }}>\n      <Container fluid>\n        <Menu.Item header>\n          <Icon name='euro sign' size='large'></Icon>\n          Finnish Foreign Trade Visualized</Menu.Item>\n          <Menu.Item link as='a' href='#trade-map'>\n          Trade Map\n        </Menu.Item>\n        <Menu.Item link as='a' href='#trade-balance'>\n          Trade Balance\n        </Menu.Item>\n        <Menu.Item link as='a' href='#imports-by-product'>\n          By product group\n        </Menu.Item>\n        <Menu.Item link as='a' href='#trade-partners'>\n          By trade partner\n        </Menu.Item>\n      </Container>\n    </Menu>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\nimport { Container, Menu, Icon } from 'semantic-ui-react'\n\nconst Footer = () => {\n  return (\n    <Menu inverted secondary style={{ backgroundColor: '#333', marginTop: '0px' }}>\n      <Container fluid>\n        <Menu.Item link as='a' href='https://github.com/joonaspartanen/finnish-foreign-trade'>\n          About\n        </Menu.Item>\n      </Container>\n    </Menu>\n  )\n}\n\nexport default Footer\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Map from './components/Map'\nimport Menu from './components/Menu'\nimport TradeBalanceChart from './components/TradeBalanceChart'\nimport ProductsTreeMap from './components/ProductsTreeMap'\nimport CountryData from './components/CountryData'\nimport CountrySearch from './components/CountrySearch'\nimport NavBar from './components/NavBar'\nimport Footer from './components/Footer'\n\nimport dataService from './services/dataService'\nimport { Container } from 'semantic-ui-react'\n\nimport Spinner from 'react-bootstrap/Spinner'\nimport ScrollableAnchor from 'react-scrollable-anchor'\n\n//configureAnchors({ offset: -50 })\n\nconst App = () => {\n  const [imports, setImports] = useState([])\n  const [exports, setExports] = useState([])\n  const [tradeBalance, setTradeBalance] = useState([])\n  const [importsSITC2, setImportsSITC2] = useState([])\n  const [exportsSITC2, setExportsSITC2] = useState([])\n  const [flow, setFlow] = useState('exports')\n  const [country, setCountry] = useState([])\n  const [countryFilter, setCountryFilter] = useState('')\n\n  const [countryCodes, setCountryCodes] = useState([])\n\n  const handleCountryFilterChange = countryName => {\n    setCountryFilter(countryName)\n    const country = countryCodes.filter(c => c.name === countryName)\n    setCountry(country)\n  }\n\n  useEffect(() => {\n    dataService.getImports().then(res => {\n      setImports(res.data)\n    })\n    dataService.getExports().then(res => {\n      setExports(res.data)\n    })\n    dataService.getTradeBalance().then(res => {\n      setTradeBalance(res.data)\n    })\n    dataService.getSITC2Data('imports').then(res => {\n      setImportsSITC2(res.data)\n    })\n    dataService.getSITC2Data('exports').then(res => {\n      setExportsSITC2(res.data)\n    })\n    dataService.getCountryCodes().then(res => {\n      setCountryCodes(res.data)\n    })\n  }, [])\n\n  console.log('Flow: ', flow)\n  return (\n    <div style={{ backgroundColor: '#343A40' }}>\n      <Container fluid style={{ paddingLeft: 0, paddingRight: 0 }}>\n        <NavBar></NavBar>\n        {(imports.length === 0 || exports.length === 0) && (\n          <div className='section' style={{ height: '100vh' }}>\n            <Spinner animation='border' variant='light' />\n          </div>\n        )}\n        {imports.length > 0 && exports.length > 0 && (\n          <div>\n            <ScrollableAnchor id={'trade-map'}>\n              <div\n                className='section'\n                style={{ position: 'relative', height: 'calc(100vh - 60px)' }}>\n                <Map imports={imports} exports={exports} flow={flow} />\n                <Menu setFlow={setFlow} />\n                <a href='#trade-balance' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n            <ScrollableAnchor id={'trade-balance'}>\n              <div\n                className='section'\n                style={{\n                  height: '100vh',\n                  backgroundColor: '#333',\n                  position: 'relative',\n                  padding: '0 0 3em 0'\n                }}>\n                <TradeBalanceChart tradeBalance={tradeBalance} />\n                <a href='#imports-by-product' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n            <ScrollableAnchor id={'imports-by-product'}>\n              <div\n                className='section'\n                style={{\n                  height: '100vh',\n                  backgroundColor: '#222',\n                  position: 'relative',\n                  padding: '0 0 3em 0'\n                }}>\n                <ProductsTreeMap SITC2Data={importsSITC2} flow={'imports'} />\n                <a href='#exports-by-product' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n            <ScrollableAnchor id={'exports-by-product'}>\n              <div\n                className='section'\n                style={{\n                  height: '100vh',\n                  backgroundColor: '#333',\n                  position: 'relative',\n                  padding: '0 0 3em 0'\n                }}>\n                <ProductsTreeMap SITC2Data={exportsSITC2} flow={'exports'} />\n                <a href='#country-data' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n            <ScrollableAnchor id={'trade-partners'}>\n              <div\n                className='section'\n                style={{\n                  minHeight: 'calc(100vh - 40px)',\n                  backgroundColor: '#222',\n                  position: 'relative',\n                  padding: '0 0 3em 0'\n                }}>\n                {country.length === 0 && (\n                  <CountrySearch\n                    countryFilter={countryFilter}\n                    handleCountryFilterChange={handleCountryFilterChange}></CountrySearch>\n                )}\n                {country.length !== 0 && (\n                  <CountryData\n                    country={country}\n                    setCountry={setCountry}\n                    setCountryFilter={setCountryFilter}></CountryData>\n                )}\n              </div>\n            </ScrollableAnchor>\n          </div>\n        )}\n        <Footer></Footer>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}