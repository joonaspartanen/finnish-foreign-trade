{"version":3,"sources":["components/Map.js","components/FlowButtons.js","components/TradeBalanceChart.js","components/ProductsTreeMap.js","services/dataService.js","components/CountryDataTable.js","components/CountryData.js","components/CountrySearch.js","components/NavBar.js","components/Footer.js","App.js","index.js"],"names":["Map","imports","exports","flow","values","year","color","hoverColor","useEffect","console","log","am4core","am4themes_dark","map","am4maps","geodata","am4geodata_worldLow","projection","Mercator","zoomControl","backgroundSeries","mapPolygons","template","polygon","fill","fillOpacity","chartContainer","wheelable","window","innerHeight","innerWidth","homeZoomLevel","minZoomLevel","homeGeoPoint","latitude","longitude","maxPanOut","polygonSeries","series","push","heatRules","property","target","min","brighten","max","useGeodata","exclude","data","polygonTemplate","tooltipText","nonScalingStroke","strokeWidth","events","on","finland","getPolygonById","states","create","properties","dispose","id","style","width","height","overflow","FlowButtons","setFlow","useState","exportsActive","setExportsActive","position","bottom","left","Button","Group","toggle","active","content","onClick","value","TradeBalanceChart","tradeBalance","am4themes_animated","am4themes_spiritedaway","chart","am4charts","responsive","enabled","rotate","marginRight","categoryAxis","xAxes","dataFields","category","numberFormatter","numberFormat","renderer","inversed","grid","location","cellStartLocation","cellEndLocation","valueAxis","yAxes","bigNumberPrefixes","number","suffix","tradeBalanceSeries","name","valueY","categoryX","columns","sequencedInterpolation","adapter","add","dataItem","importSeries","exportSeries","paddingTop","textAlign","Header","inverted","as","ProductsTreeMap","SITC2Data","attributes","children","level1","seriesTemplates","tooltip","pointerOrientation","legend","itemContainers","labels","text","rules","relevant","widthXL","state","stateId","sprite","clickable","focusable","paddingRight","paddingLeft","a","async","axios","get","response","country","code","CountryDataTable","tradeData","Table","basic","compact","celled","selectable","singleLine","Row","HeaderCell","colSpan","Body","slice","key","group","Cell","CountryData","setCountry","setCountryFilter","countryImports","setCountryImports","countryExports","setCountryExports","dataService","then","res","length","Dimmer","Loader","Grid","container","stackable","relaxed","icon","circular","top","Icon","size","Column","CountrySearch","handleCountryFilterChange","countryNames","setValue","isLoading","setIsLoading","results","setResults","Search","placeholder","loading","onResultSelect","e","result","title","onSearchChange","_","debounce","re","RegExp","escapeRegExp","foundResults","filter","test","leading","resultRenderer","NavBar","Menu","backgroundColor","marginBottom","Item","header","link","href","Footer","secondary","marginTop","Container","fluid","App","setImports","setExports","setTradeBalance","importsSITC2","setImportsSITC2","exportsSITC2","setExportsSITC2","countryFilter","countryCodes","setCountryCodes","className","padding","minHeight","countryName","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.272207eb.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4maps from '@amcharts/amcharts4/maps'\nimport am4themes_dark from '@amcharts/amcharts4/themes/dark'\n//import am4themes_animated from '@amcharts/amcharts4/themes/animated'\nimport am4geodata_worldLow from '@amcharts/amcharts4-geodata/worldLow'\n\nconst Map = ({ imports, exports, flow, year }) => {\n  let values = null\n  let color = '#5E5B78'\n  let hoverColor = '#4B0000'\n\n  if (flow === 'exports') {\n    values = exports\n    color = '#5E5B78'\n    hoverColor = '#4B0000'\n  } else {\n    values = imports\n    color = '#C17D80'\n    hoverColor = '#161331'\n  }\n\n  useEffect(() => {\n    console.log(flow)\n    console.log(exports)\n    console.log(imports)\n\n    //am4core.useTheme(am4themes_animated)\n    am4core.useTheme(am4themes_dark)\n\n    let map = am4core.create('mapdiv', am4maps.MapChart)\n\n    map.geodata = am4geodata_worldLow\n    map.projection = new am4maps.projections.Mercator()\n    //map.projection = new am4maps.projections.Orthographic()\n    //map.panBehavior = 'rotateLongLat'\n    map.zoomControl = new am4maps.ZoomControl()\n    map.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color('#EEE')\n    map.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 1\n    map.chartContainer.wheelable = false\n\n    //let graticuleSeries = map.series.push(new am4maps.GraticuleSeries())\n    //graticuleSeries.mapLines.template.line.stroke = am4core.color('#67b7dc')\n    //graticuleSeries.mapLines.template.line.strokeOpacity = 0.2\n    //graticuleSeries.fitExtent = false\n\n    // The initial zoom level must be higher if using portrait view.\n    if (window.innerHeight > window.innerWidth) {\n      map.homeZoomLevel = 5\n      map.minZoomLevel = 5\n    } else {\n      map.homeZoomLevel = 2\n      map.minZoomLevel = 2\n    }\n\n    map.homeGeoPoint = {\n      latitude: 50,\n      longitude: 11\n    }\n\n    map.maxPanOut = 0\n\n    let polygonSeries = map.series.push(new am4maps.MapPolygonSeries())\n\n    polygonSeries.heatRules.push({\n      property: 'fill',\n      target: polygonSeries.mapPolygons.template,\n      min: am4core.color(color).brighten(1.4),\n      max: am4core.color(color).brighten(-0.6)\n\n      //      min: map.colors.getIndex(colorIndex).brighten(2.0),\n      //      max: map.colors.getIndex(colorIndex).brighten(-0.8)\n    })\n\n    polygonSeries.useGeodata = true\n    polygonSeries.exclude = ['AQ', 'SJ']\n\n    polygonSeries.data = values\n\n    let polygonTemplate = polygonSeries.mapPolygons.template\n    polygonTemplate.tooltipText = `{name}: {euros} €`\n    polygonTemplate.nonScalingStroke = true\n    polygonTemplate.strokeWidth = 0.5\n\n    map.events.on('ready', () => {\n      let finland = polygonSeries.getPolygonById('FI')\n      finland.fill = am4core.color('#FFF')\n      finland.tooltipText = ''\n    })\n\n    let hs = polygonTemplate.states.create('hover')\n    hs.properties.fill = am4core.color(hoverColor)\n\n    return () => {\n      if (map) {\n        map.dispose()\n      }\n    }\n  }, [values, color, hoverColor, exports, imports, flow])\n\n  return <div id='mapdiv' style={{ width: '100%', height: '100%', overflow: 'hidden' }}></div>\n}\n\nexport default Map\n","import React, { useState } from 'react'\nimport { Button } from 'semantic-ui-react'\n\nconst FlowButtons = ({ setFlow }) => {\n  const [exportsActive, setExportsActive] = useState(true)\n\n  return (\n    <div style={{ position: 'absolute', bottom: '2em', left: '2em' }}>\n      <Button.Group>\n        <Button\n          toggle\n          active={exportsActive}\n          content='Exports'\n          onClick={value => {\n            if (!exportsActive) {\n              setExportsActive(true)\n              setFlow('exports')\n            }\n          }}\n        />\n        <Button\n          toggle\n          active={!exportsActive}\n          content='Imports'\n          onClick={value => {\n            if (exportsActive) {\n              setExportsActive(false)\n              setFlow('imports')\n            }\n          }}\n        />\n      </Button.Group>\n    </div>\n  )\n}\n\nexport default FlowButtons\n","import React, { useEffect } from 'react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated'\nimport am4themes_spiritedaway from '@amcharts/amcharts4/themes/spiritedaway'\nimport { Header } from 'semantic-ui-react'\n\nconst TradeBalanceChart = ({ tradeBalance }) => {\n  useEffect(() => {\n    am4core.useTheme(am4themes_animated)\n    am4core.useTheme(am4themes_spiritedaway)\n\n    let chart = am4core.create('chartdiv', am4charts.XYChart)\n    chart.responsive.enabled = true\n    chart.rotate = true\n\n    chart.data = tradeBalance\n    chart.marginRight = '100'\n\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\n    categoryAxis.dataFields.category = 'year'\n    categoryAxis.numberFormatter.numberFormat = '#'\n    categoryAxis.renderer.inversed = true\n    categoryAxis.renderer.grid.template.location = 0\n    categoryAxis.renderer.cellStartLocation = 0.1\n    categoryAxis.renderer.cellEndLocation = 0.9\n\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\n    // valueAxis.min = 0\n    valueAxis.numberFormatter.numberFormat = '##.##a'\n    valueAxis.numberFormatter.bigNumberPrefixes = [{ number: 1e9, suffix: 'B' }]\n\n    let tradeBalanceSeries = chart.series.push(new am4charts.ColumnSeries())\n    tradeBalanceSeries.name = 'Trade Balance'\n    tradeBalanceSeries.fill = am4core.color('#2E8B57')\n    tradeBalanceSeries.strokeWidth = 0\n    tradeBalanceSeries.dataFields.valueY = 'tradeBalance'\n    tradeBalanceSeries.dataFields.categoryX = 'year'\n    tradeBalanceSeries.columns.template.height = am4core.percent(100)\n    tradeBalanceSeries.sequencedInterpolation = true\n    tradeBalanceSeries.columns.template.tooltipText = '{name}:\\n€{valueY}'\n\n    tradeBalanceSeries.columns.template.adapter.add('fill', (fill, target) => {\n      if (target.dataItem && target.dataItem.valueY < 0) {\n        return am4core.color('#800000')\n      } else {\n        return fill\n      }\n    })\n\n    let importSeries = chart.series.push(new am4charts.ColumnSeries())\n    importSeries.name = 'Imports to Finland'\n    importSeries.fill = am4core.color('#63718B')\n    importSeries.strokeWidth = 0\n    importSeries.dataFields.valueY = 'imports'\n    importSeries.dataFields.categoryX = 'year'\n    importSeries.columns.template.height = am4core.percent(100)\n    importSeries.sequencedInterpolation = true\n    importSeries.columns.template.tooltipText = '{name}:\\n€{valueY}'\n\n    let exportSeries = chart.series.push(new am4charts.ColumnSeries())\n    exportSeries.name = 'Exports from Finland'\n    exportSeries.fill = am4core.color('#EBA05C')\n    exportSeries.strokeWidth = 0\n    exportSeries.dataFields.valueY = 'exports'\n    exportSeries.dataFields.categoryX = 'year'\n    exportSeries.columns.template.height = am4core.percent(100)\n    exportSeries.sequencedInterpolation = true\n    exportSeries.columns.template.tooltipText = '{name}:\\n€{valueY}'\n\n    /* chart.responsive.rules.push({\n      relevant: am4core.ResponsiveBreakpoints.widthXL,\n      state: (target, stateId) => {\n        if (target instanceof am4charts.Chart) {\n          let state = target.states.create(stateId)\n          console.log(state)\n          return state\n        }\n\n        if (target instanceof am4charts.CategoryAxis) {\n          let state = target.states.create(stateId)\n          console.log(state.sprite.renderer)\n          return state\n        }\n        if (target instanceof am4charts.ValueAxis) {\n          let state = target.states.create(stateId)\n          console.log(state)\n          //state.sprite.renderer.opposite = true\n          return state\n        }\n        return null\n      }\n    }) */\n\n    return () => {\n      if (chart) {\n        chart.dispose()\n      }\n    }\n  }, [tradeBalance])\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        paddingTop: '3em',\n        textAlign: 'center'\n      }}>\n      <Header inverted as='h3'>\n        Finnish Trade Balance\n      </Header>\n      <div id='chartdiv' style={{ width: '100%', height: '95%' }}></div>\n    </div>\n  )\n}\n\nexport default TradeBalanceChart\n","import React, { useEffect } from 'react'\nimport { Header } from 'semantic-ui-react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated'\nimport am4themes_spiritedaway from '@amcharts/amcharts4/themes/spiritedaway'\n\nconst ProductsTreeMap = ({ SITC2Data, flow }) => {\n  const attributes = { id: `products-treemap-div-${flow}` }\n\n  useEffect(() => {\n    am4core.useTheme(am4themes_animated)\n    am4core.useTheme(am4themes_spiritedaway)\n    let chart = am4core.create(`products-treemap-div-${flow}`, am4charts.TreeMap)\n    chart.responsive.enabled = true\n\n    chart.data = SITC2Data\n    chart.dataFields.value = 'value'\n    chart.dataFields.name = 'group'\n    chart.dataFields.children = 'children'\n\n    let level1 = chart.seriesTemplates.create('1')\n    let level1_column = level1.columns.template\n\n    level1_column.tooltipText = '{group}: {value} €'\n    level1.tooltip.pointerOrientation = 'down'\n\n    chart.legend = new am4charts.Legend()\n    chart.legend.position = 'bottom'\n    chart.legend.paddingTop = 20\n    chart.legend.itemContainers.template.tooltipText = '{group}'\n    chart.legend.labels.template.text = ''\n\n    chart.responsive.rules.push({\n      relevant: am4core.ResponsiveBreakpoints.widthXL,\n      state: (target, stateId) => {\n        if (target instanceof am4charts.Legend) {\n          let state = target.states.create(stateId)\n          console.log(state)\n          state.sprite.itemContainers.template.clickable = false\n          state.sprite.itemContainers.template.focusable = false\n          return state\n        }\n        return null\n      }\n    })\n\n    return () => {\n      if (chart) {\n        chart.dispose()\n      }\n    }\n  }, [SITC2Data, flow])\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100vh',\n        paddingTop: '3em',\n        paddingRight: '10vw',\n        paddingLeft: '10vw',\n        textAlign: 'center'\n      }}>\n      <Header inverted as='h3'>\n        Finnish {flow} by product category\n      </Header>\n      <div {...attributes} style={{ width: '100%', height: '90%' }}></div>\n    </div>\n  )\n}\n\nexport default ProductsTreeMap\n","import axios from 'axios'\n\nconst getImports = async () => {\n  const response = await axios.get('/imports')\n  return response\n}\n\nconst getExports = async () => {\n  const response = await axios.get('/exports')\n  return response\n}\n\nconst getTradeBalance = async () => {\n  const response = await axios.get('/tradebalance')\n  return response\n}\n\nconst getSITC2Data = async flow => {\n  const response = await axios.get(`/SITC2/${flow}`)\n  return response\n}\n\nconst getSITC2CountryData = async (flow, country) => {\n  const response = await axios.get(`/SITC2/${flow}/${country[0].code}`)\n  return response\n}\n\nconst getCountryCodes = async () => {\n  const response = await axios.get('/countries')\n  return response\n}\n\nexport default {\n  getImports,\n  getExports,\n  getTradeBalance,\n  getSITC2Data,\n  getSITC2CountryData,\n  getCountryCodes\n}\n","import React from 'react'\nimport { Table, Header } from 'semantic-ui-react'\n\nconst CountryDataTable = ({ country, tradeData, flow }) => {\n  return (\n    <Table inverted basic compact celled selectable singleLine>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell colSpan='2' textAlign='center'>\n            <Header as='h3' style={{ color: '#fff' }}>\n              Finland {flow} {country[0].name}\n            </Header>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {tradeData.slice(0, 10).map(a => (\n          <Table.Row key={a.group}>\n            <Table.Cell>{a.group}</Table.Cell>\n            <Table.Cell>{a.value} €</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  )\n}\n\nexport default CountryDataTable\n","import React, { useState, useEffect } from 'react'\nimport dataService from '../services/dataService'\n//import { Container, Row, Col, Button } from 'react-bootstrap'\nimport { Grid, Button, Icon, Dimmer, Loader } from 'semantic-ui-react'\nimport CountryDataTable from './CountryDataTable'\n\nconst CountryData = ({ country, setCountry, setCountryFilter }) => {\n  const [countryImports, setCountryImports] = useState([])\n  const [countryExports, setCountryExports] = useState([])\n\n  useEffect(() => {\n    dataService.getSITC2CountryData('imports', country).then(res => {\n      setCountryImports(res.data)\n    })\n    dataService.getSITC2CountryData('exports', country).then(res => {\n      setCountryExports(res.data)\n    })\n  }, [country])\n\n  if (country.length === 0) {\n    return null\n  }\n\n  if (countryImports.length === 0 && countryExports.length === 0) {\n    return (\n      <Dimmer active>\n        <Loader />\n      </Dimmer>\n    )\n  }\n\n  return (\n    <Grid container stackable relaxed>\n      <Button\n        icon\n        circular\n        onClick={() => {\n          setCountryFilter('')\n          setCountry([])\n        }}\n        style={{ position: 'absolute', top: '1em', left: '1em' }}>\n        <Icon name='angle left' size='large' />\n      </Button>\n      <Grid.Row columns={2}>\n        <Grid.Column>\n          <CountryDataTable country={country} tradeData={countryImports} flow={'imported from'} />\n        </Grid.Column>\n        <Grid.Column>\n          <CountryDataTable country={country} tradeData={countryExports} flow={'exported to'} />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default CountryData\n","import React, { useState } from 'react'\nimport { Search } from 'semantic-ui-react'\nimport _ from 'lodash'\n\nconst CountrySearch = ({ handleCountryFilterChange, countryNames }) => {\n  const [value, setValue] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [results, setResults] = useState([])\n\n  const resultRenderer = ({ title }) => <div>{title}</div>\n\n  const handleResultSelect = (e, { result }) => {\n    setValue(result.title)\n    handleCountryFilterChange(result.title)\n  }\n\n  const handleSearchChange = (e, { value }) => {\n    setIsLoading(true)\n    setValue(value)\n\n    setIsLoading(true)\n    setValue(value)\n\n    if (value.length < 1) {\n      setValue('')\n      setIsLoading(false)\n      setResults([])\n      return\n    }\n\n    const re = new RegExp(_.escapeRegExp(value), 'i')\n    const isMatch = result => re.test(result.title)\n\n    setIsLoading(false)\n\n    const foundResults = _.filter(countryNames, isMatch)\n\n    if (foundResults.length > 20) {\n      setResults([{ title: 'Please narrow down your search.' }])\n    } else {\n      setResults(foundResults)\n    }\n    if (results.length === 1) {\n      handleCountryFilterChange(results[0].title)\n    }\n    console.log(results)\n  }\n\n  return (\n    <Search\n      placeholder='Search...'\n      loading={isLoading}\n      onResultSelect={handleResultSelect}\n      onSearchChange={_.debounce(handleSearchChange, 500, {\n        leading: true\n      })}\n      results={results}\n      resultRenderer={resultRenderer}\n      value={value}></Search>\n  )\n}\n\nexport default CountrySearch\n","import React from 'react'\nimport { Container, Menu, Icon } from 'semantic-ui-react'\n\nconst NavBar = () => {\n  return (\n    <Menu inverted stackable size='large' style={{ backgroundColor: '#333', marginBottom: '0px' }}>\n      <Menu.Item header>Finnish Foreign Trade Visualized</Menu.Item>\n      <Menu.Item link as='a' href='#trade-map'>\n        Trade Map\n      </Menu.Item>\n      <Menu.Item link as='a' href='#trade-balance'>\n        Trade Balance\n      </Menu.Item>\n      <Menu.Item link as='a' href='#imports-by-product'>\n        By product group\n      </Menu.Item>\n      <Menu.Item link as='a' href='#trade-partners'>\n        By trade partner\n      </Menu.Item>\n    </Menu>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\nimport { Container, Menu } from 'semantic-ui-react'\n\nconst Footer = () => {\n  return (\n    <Menu inverted secondary style={{ backgroundColor: '#333', marginTop: '0px' }}>\n      <Container fluid>\n        <Menu.Item link as='a' href='https://github.com/joonaspartanen/finnish-foreign-trade'>\n          About\n        </Menu.Item>\n      </Container>\n    </Menu>\n  )\n}\n\nexport default Footer\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Map from './components/Map'\nimport FlowButtons from './components/FlowButtons'\nimport TradeBalanceChart from './components/TradeBalanceChart'\nimport ProductsTreeMap from './components/ProductsTreeMap'\nimport CountryData from './components/CountryData'\nimport CountrySearch from './components/CountrySearch'\nimport NavBar from './components/NavBar'\nimport Footer from './components/Footer'\n\nimport dataService from './services/dataService'\nimport { Container, Loader } from 'semantic-ui-react'\n\nimport ScrollableAnchor from 'react-scrollable-anchor'\n\n//configureAnchors({ offset: -50 })\n\nconst App = () => {\n  const [imports, setImports] = useState([])\n  const [exports, setExports] = useState([])\n  const [tradeBalance, setTradeBalance] = useState([])\n  const [importsSITC2, setImportsSITC2] = useState([])\n  const [exportsSITC2, setExportsSITC2] = useState([])\n  const [flow, setFlow] = useState('exports')\n  const [country, setCountry] = useState([])\n  const [countryFilter, setCountryFilter] = useState('')\n\n  const [countryCodes, setCountryCodes] = useState([])\n\n  const handleCountryFilterChange = countryName => {\n    setCountryFilter(countryName)\n    const country = countryCodes.filter(c => c.name === countryName)\n    setCountry(country)\n  }\n\n  useEffect(() => {\n    dataService.getImports().then(res => {\n      setImports(res.data)\n    })\n    dataService.getExports().then(res => {\n      setExports(res.data)\n    })\n    dataService.getTradeBalance().then(res => {\n      setTradeBalance(res.data)\n    })\n    dataService.getSITC2Data('imports').then(res => {\n      setImportsSITC2(res.data)\n    })\n    dataService.getSITC2Data('exports').then(res => {\n      setExportsSITC2(res.data)\n    })\n    dataService.getCountryCodes().then(res => {\n      setCountryCodes(res.data)\n    })\n  }, [])\n\n  console.log('Flow: ', flow)\n  return (\n    <div style={{ backgroundColor: '#333', paddingLeft: 0, paddingRight: 0 }}>\n      <Container fluid>\n        <NavBar />\n        {(imports.length === 0 || exports.length === 0) && (\n          <div style={{ height: '100vh' }}>\n            <Loader active />\n          </div>\n        )}\n        {imports.length > 0 && exports.length > 0 && (\n          <div>\n            <ScrollableAnchor id={'trade-map'}>\n              <div\n                className='section'\n                style={{\n                  position: 'relative',\n                  height: 'calc(100vh - 60px)',\n                  backgroundColor: '#333'\n                }}>\n                <Map imports={imports} exports={exports} flow={flow} />\n                <FlowButtons setFlow={setFlow} />\n                <a href='#trade-balance' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n            <ScrollableAnchor id={'trade-balance'}>\n              <div\n                className='section'\n                style={{\n                  height: '100vh',\n                  backgroundColor: '#333',\n                  position: 'relative',\n                  padding: '0 0 4em 0'\n                }}>\n                <TradeBalanceChart tradeBalance={tradeBalance} />\n                <a href='#imports-by-product' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n            <ScrollableAnchor id={'imports-by-product'}>\n              <div\n                className='section'\n                style={{\n                  height: '100vh',\n                  backgroundColor: '#222',\n                  position: 'relative',\n                  padding: '0 0 3em 0'\n                }}>\n                <ProductsTreeMap SITC2Data={importsSITC2} flow={'imports'} />\n                <a href='#exports-by-product' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n            <ScrollableAnchor id={'exports-by-product'}>\n              <div\n                className='section'\n                style={{\n                  height: '100vh',\n                  backgroundColor: '#333',\n                  position: 'relative',\n                  padding: '0 0 3em 0'\n                }}>\n                <ProductsTreeMap SITC2Data={exportsSITC2} flow={'exports'} />\n                <a href='#trade-partners' style={{ position: 'absolute', bottom: '2em' }}>\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n            <ScrollableAnchor id={'trade-partners'}>\n              <div\n                className='section'\n                style={{\n                  minHeight: 'calc(100vh - 40px)',\n                  backgroundColor: '#222',\n                  position: 'relative',\n                  padding: '0 0 3em 0'\n                }}>\n                {country.length === 0 && (\n                  <CountrySearch\n                    countryFilter={countryFilter}\n                    handleCountryFilterChange={handleCountryFilterChange}\n                    countryNames={countryCodes.map(c => ({\n                      title: c.name,\n                      key: c.code\n                    }))}></CountrySearch>\n                )}\n                {country.length !== 0 && (\n                  <CountryData\n                    country={country}\n                    setCountry={setCountry}\n                    setCountryFilter={setCountryFilter}></CountryData>\n                )}\n              </div>\n            </ScrollableAnchor>\n          </div>\n        )}\n        <Footer></Footer>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}