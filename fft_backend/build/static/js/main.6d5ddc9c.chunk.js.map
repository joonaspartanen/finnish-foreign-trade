{"version":3,"sources":["components/Map.js","components/Menu.js","components/TradeBalanceChart.js","components/ProductsTreeMap.js","services/dataService.js","App.js","index.js"],"names":["Map","imports","exports","flow","values","year","color","hoverColor","useEffect","am4core","am4themes_dark","map","am4maps","geodata","am4geodata_worldLow","projection","Mercator","zoomControl","backgroundSeries","mapPolygons","template","polygon","fill","fillOpacity","chartContainer","wheelable","window","innerHeight","innerWidth","homeZoomLevel","minZoomLevel","homeGeoPoint","latitude","longitude","maxPanOut","polygonSeries","series","push","heatRules","property","target","min","brighten","max","useGeodata","exclude","data","polygonTemplate","tooltipText","nonScalingStroke","strokeWidth","events","on","finland","getPolygonById","states","create","properties","dispose","id","style","width","height","overflow","Menu","setFlow","position","bottom","left","toggle","name","variant","onClick","value","TradeBalanceChart","tradeBalance","am4themes_animated","am4themes_spiritedaway","chart","am4charts","marginRight","categoryAxis","yAxes","dataFields","category","numberFormatter","numberFormat","renderer","inversed","grid","location","cellStartLocation","cellEndLocation","valueAxis","xAxes","strictMinMax","bigNumberPrefixes","opposite","tradeBalanceSeries","valueX","categoryY","columns","sequencedInterpolation","adapter","add","dataItem","importSeries","exportSeries","valueY","categoryX","ProductsTreeMap","SITC2Data","legend","children","seriesTemplates","paddingTop","a","async","axios","get","response","App","useState","setImports","setExports","setTradeBalance","setProductData","importsSITC2","setImportsSITC2","setExportsSITC2","dataService","then","res","console","log","backgroundColor","fluid","paddingLeft","paddingRight","bg","expand","Brand","href","Toggle","aria-controls","Collapse","className","Link","length","animation","padding","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d5ddc9c.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4maps from '@amcharts/amcharts4/maps'\nimport am4themes_dark from '@amcharts/amcharts4/themes/dark'\n//import am4themes_animated from '@amcharts/amcharts4/themes/animated'\nimport am4geodata_worldLow from '@amcharts/amcharts4-geodata/worldLow'\n\nconst Map = ({ imports, exports, flow, year }) => {\n\n  let values = null\n  let color = '#5E5B78'\n  let hoverColor = '#4B0000'\n\n  if (flow === 'exports') {\n    values = exports\n    color = '#5E5B78'\n    hoverColor = '#4B0000'\n  } else {\n    values = imports\n    color = '#C17D80'\n    hoverColor = '#161331'\n  }\n\n  useEffect(() => {\n\n    //am4core.useTheme(am4themes_animated)\n    am4core.useTheme(am4themes_dark)\n\n    let map = am4core.create('mapdiv', am4maps.MapChart)\n\n    map.geodata = am4geodata_worldLow\n    map.projection = new am4maps.projections.Mercator()\n    //map.projection = new am4maps.projections.Orthographic()\n    //map.panBehavior = 'rotateLongLat'\n    map.zoomControl = new am4maps.ZoomControl()\n    map.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color('#EEE')\n    map.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 1\n    map.chartContainer.wheelable = false\n\n    //let graticuleSeries = map.series.push(new am4maps.GraticuleSeries())\n    //graticuleSeries.mapLines.template.line.stroke = am4core.color('#67b7dc')\n    //graticuleSeries.mapLines.template.line.strokeOpacity = 0.2\n    //graticuleSeries.fitExtent = false\n\n    // The initial zoom level must be higher if using portrait view.\n    if (window.innerHeight > window.innerWidth) {\n      map.homeZoomLevel = 5\n      map.minZoomLevel = 5\n    } else {\n      map.homeZoomLevel = 2\n      map.minZoomLevel = 2\n    }\n\n    map.homeGeoPoint = {\n      latitude: 50,\n      longitude: 11\n    }\n\n    map.maxPanOut = 0\n\n    let polygonSeries = map.series.push(new am4maps.MapPolygonSeries())\n\n    polygonSeries.heatRules.push({\n      property: 'fill',\n      target: polygonSeries.mapPolygons.template,\n      min: am4core.color(color).brighten(1.4),\n      max: am4core.color(color).brighten(-0.6)\n\n      //      min: map.colors.getIndex(colorIndex).brighten(2.0),\n      //      max: map.colors.getIndex(colorIndex).brighten(-0.8)\n    })\n\n    polygonSeries.useGeodata = true\n    polygonSeries.exclude = ['AQ', 'SJ']\n\n    polygonSeries.data = values\n\n    let polygonTemplate = polygonSeries.mapPolygons.template\n    polygonTemplate.tooltipText = `{name}: {euros} €`\n    polygonTemplate.nonScalingStroke = true\n    polygonTemplate.strokeWidth = 0.5\n\n    map.events.on(\"ready\", () => {\n      let finland = polygonSeries.getPolygonById(\"FI\")\n      finland.fill = am4core.color('#FFF')\n      finland.tooltipText = ''\n    })\n\n    let hs = polygonTemplate.states.create('hover')\n    hs.properties.fill = am4core.color(hoverColor)\n\n    return (() => {\n      if (map) {\n        map.dispose()\n      }\n    })\n  }, [values, color, hoverColor])\n\n  return (\n    <div id='mapdiv' style={{ width: '100%', height: '100%', overflow: 'hidden' }}></div>\n  )\n}\n\nexport default Map","import React from 'react'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\n\nconst Menu = ({ setFlow }) => {\n\n\n  return (\n    <div style={{ position: 'absolute', bottom: '2em', left: '2em' }}>\n      <ToggleButtonGroup\n        toggle='true'\n        name='change-flow'>\n        <ToggleButton\n          variant='primary'\n          onClick={(value) => setFlow('exports')}>\n          Exports 2018\n        </ToggleButton>\n        <ToggleButton\n          variant='secondary'\n          onClick={(value) => setFlow('imports')}>\n          Imports 2018\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </div >\n  )\n}\n\nexport default Menu","import React, { useEffect } from 'react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated'\nimport am4themes_spiritedaway from '@amcharts/amcharts4/themes/spiritedaway'\n\n\nconst TradeBalanceChart = ({ tradeBalance }) => {\n\n  useEffect(() => {\n\n    am4core.useTheme(am4themes_animated)\n    am4core.useTheme(am4themes_spiritedaway)\n\n    let chart = am4core.create('chartdiv', am4charts.XYChart)\n    chart.data = tradeBalance\n    chart.marginRight = '100'\n\n    if (window.innerHeight > window.innerWidth) {\n      let categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.dataFields.category = 'year'\n      categoryAxis.numberFormatter.numberFormat = '#'\n      categoryAxis.renderer.inversed = true\n      categoryAxis.renderer.grid.template.location = 0\n      categoryAxis.renderer.cellStartLocation = 0.1\n      categoryAxis.renderer.cellEndLocation = 0.9\n\n      let valueAxis = chart.xAxes.push(new am4charts.ValueAxis())\n      valueAxis.min = -1000000000\n      valueAxis.strictMinMax = true\n      valueAxis.numberFormatter.numberFormat = '##.##a'\n      valueAxis.numberFormatter.bigNumberPrefixes = [\n        { 'number': 1e+9, 'suffix': 'B' }\n      ]\n\n      valueAxis.renderer.opposite = true\n\n      let tradeBalanceSeries = chart.series.push(new am4charts.ColumnSeries())\n      tradeBalanceSeries.name = 'Trade Balance'\n      tradeBalanceSeries.fill = am4core.color('#2E8B57')\n      tradeBalanceSeries.strokeWidth = 0\n      tradeBalanceSeries.dataFields.valueX = 'tradeBalance'\n      tradeBalanceSeries.dataFields.categoryY = 'year'\n      tradeBalanceSeries.columns.template.height = am4core.percent(100)\n      tradeBalanceSeries.sequencedInterpolation = true\n      tradeBalanceSeries.columns.template.tooltipText = '{name}:\\n€{valueX}'\n\n      tradeBalanceSeries.columns.template.adapter.add('fill', (fill, target) => {\n        if (target.dataItem && (target.dataItem.valueX < 0)) {\n          return am4core.color('#800000')\n        }\n        else {\n          return fill\n        }\n      })\n\n      let importSeries = chart.series.push(new am4charts.ColumnSeries())\n      importSeries.name = 'Imports to Finland (2018)'\n      importSeries.fill = am4core.color('#63718B')\n      importSeries.strokeWidth = 0\n      importSeries.dataFields.valueX = 'imports'\n      importSeries.dataFields.categoryY = 'year'\n      importSeries.columns.template.height = am4core.percent(100)\n      importSeries.sequencedInterpolation = true\n      importSeries.columns.template.tooltipText = '{name}:\\n€{valueX}'\n\n      let exportSeries = chart.series.push(new am4charts.ColumnSeries())\n      exportSeries.name = 'Exports from Finland (2018)'\n      exportSeries.fill = am4core.color('#EBA05C')\n      exportSeries.strokeWidth = 0\n      exportSeries.dataFields.valueX = 'exports'\n      exportSeries.dataFields.categoryY = 'year'\n      exportSeries.columns.template.height = am4core.percent(100)\n      exportSeries.sequencedInterpolation = true\n      exportSeries.columns.template.tooltipText = '{name}:\\n€{valueX}'\n    } else {\n      let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis())\n      categoryAxis.dataFields.category = 'year'\n      categoryAxis.numberFormatter.numberFormat = '#'\n      categoryAxis.renderer.inversed = true\n      categoryAxis.renderer.grid.template.location = 0\n      categoryAxis.renderer.cellStartLocation = 0.1\n      categoryAxis.renderer.cellEndLocation = 0.9\n\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\n      // valueAxis.min = 0\n      valueAxis.numberFormatter.numberFormat = '##.##a'\n      valueAxis.numberFormatter.bigNumberPrefixes = [\n        { 'number': 1e+9, 'suffix': 'B' }\n      ]\n\n      let tradeBalanceSeries = chart.series.push(new am4charts.ColumnSeries())\n      tradeBalanceSeries.name = 'Trade Balance'\n      tradeBalanceSeries.fill = am4core.color('#2E8B57')\n      tradeBalanceSeries.strokeWidth = 0\n      tradeBalanceSeries.dataFields.valueY = 'tradeBalance'\n      tradeBalanceSeries.dataFields.categoryX = 'year'\n      tradeBalanceSeries.columns.template.height = am4core.percent(100)\n      tradeBalanceSeries.sequencedInterpolation = true\n      tradeBalanceSeries.columns.template.tooltipText = '{name}:\\n€{valueY}'\n\n      tradeBalanceSeries.columns.template.adapter.add('fill', (fill, target) => {\n        if (target.dataItem && (target.dataItem.valueY < 0)) {\n          return am4core.color('#800000')\n        }\n        else {\n          return fill\n        }\n      })\n\n      let importSeries = chart.series.push(new am4charts.ColumnSeries())\n      importSeries.name = 'Imports to Finland (2018)'\n      importSeries.fill = am4core.color('#63718B')\n      importSeries.strokeWidth = 0\n      importSeries.dataFields.valueY = 'imports'\n      importSeries.dataFields.categoryX = 'year'\n      importSeries.columns.template.height = am4core.percent(100)\n      importSeries.sequencedInterpolation = true\n      importSeries.columns.template.tooltipText = '{name}:\\n€{valueY}'\n\n      let exportSeries = chart.series.push(new am4charts.ColumnSeries())\n      exportSeries.name = 'Exports from Finland (2018)'\n      exportSeries.fill = am4core.color('#EBA05C')\n      exportSeries.strokeWidth = 0\n      exportSeries.dataFields.valueY = 'exports'\n      exportSeries.dataFields.categoryX = 'year'\n      exportSeries.columns.template.height = am4core.percent(100)\n      exportSeries.sequencedInterpolation = true\n      exportSeries.columns.template.tooltipText = '{name}:\\n€{valueY}'\n    }\n\n    return (() => {\n      if (chart) {\n        chart.dispose()\n      }\n    })\n\n  }, [tradeBalance])\n\n  return (\n    <div id='chartdiv' style={{ width: '100%', height: '100%', overflow: 'hidden' }}></div>\n  )\n\n}\n\nexport default TradeBalanceChart","import React, { useEffect } from 'react'\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated'\nimport am4themes_spiritedaway from '@amcharts/amcharts4/themes/spiritedaway'\n\nconst ProductsTreeMap = ({ SITC2Data }) => {\n  useEffect(() => {\n    am4core.useTheme(am4themes_animated)\n    am4core.useTheme(am4themes_spiritedaway)\n    let chart = am4core.create('products-treemap-div', am4charts.TreeMap)\n    chart.legend = new am4charts.Legend()\n\n    chart.data = SITC2Data\n    chart.dataFields.value = 'value'\n    chart.dataFields.name = 'group'\n    chart.dataFields.children = 'children'\n\n    let level1 = chart.seriesTemplates.create('1')\n    let level1_column = level1.columns.template\n\n    level1_column.tooltipText = '{group}: {value} €'\n\n    return () => {\n      if (chart) {\n        chart.dispose()\n      }\n    }\n  }, [SITC2Data])\n\n  return (\n    <div\n      id='products-treemap-div'\n      style={{ width: '100%', height: '100vh', paddingTop: '2em' }}\n    ></div>\n  )\n}\n\nexport default ProductsTreeMap\n","import axios from 'axios'\n\nconst getImports = async () => {\n  const response = await axios.get('/imports')\n  return response\n}\n\nconst getExports = async () => {\n  const response = await axios.get('/exports')\n  return response\n}\n\nconst getTradeBalance = async () => {\n  const response = await axios.get('/tradebalance')\n  return response\n}\n\nconst getProductData = async () => {\n  const response = await axios.get('/SITC1')\n  return response\n}\n\nconst getSITC2Data = async flow => {\n  const response = await axios.get(`/SITC2/${flow}`)\n  return response\n}\n\nexport default {\n  getImports,\n  getExports,\n  getTradeBalance,\n  getProductData,\n  getSITC2Data\n}\n","import React, { useState, useEffect } from 'react'\nimport Map from './components/Map'\nimport Menu from './components/Menu'\nimport TradeBalanceChart from './components/TradeBalanceChart'\nimport ProductsBarChart from './components/ProductsBarChart'\nimport ProductsTreeMap from './components/ProductsTreeMap'\nimport dataService from './services/dataService'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\nimport Spinner from 'react-bootstrap/Spinner'\nimport ScrollableAnchor from 'react-scrollable-anchor'\nimport { configureAnchors } from 'react-scrollable-anchor'\nimport './App.css'\n\n//configureAnchors({ offset: -50 })\n\nconst App = () => {\n  const [imports, setImports] = useState([])\n  const [exports, setExports] = useState([])\n  const [tradeBalance, setTradeBalance] = useState([])\n  const [productData, setProductData] = useState([])\n  const [importsSITC2, setImportsSITC2] = useState([])\n  const [exportsSITC2, setExportsSITC2] = useState([])\n  const [flow, setFlow] = useState('exports')\n\n  useEffect(() => {\n    dataService.getImports().then(res => {\n      setImports(res.data)\n    })\n    dataService.getExports().then(res => {\n      setExports(res.data)\n    })\n    dataService.getTradeBalance().then(res => {\n      setTradeBalance(res.data)\n    })\n    dataService.getProductData().then(res => {\n      setProductData(res.data)\n    })\n    dataService.getSITC2Data('imports').then(res => {\n      setImportsSITC2(res.data)\n    })\n    dataService.getSITC2Data('exports').then(res => {\n      setExportsSITC2(res.data)\n    })\n  }, [])\n\n  console.log('Flow: ', flow)\n  return (\n    <div style={{ backgroundColor: '#343A40' }}>\n      <Container fluid={'true'} style={{ paddingLeft: 0, paddingRight: 0 }}>\n        <Navbar bg='dark' variant='dark' expand='md'>\n          <Navbar.Brand href='/'>Finnish Foreign Trade Visualized</Navbar.Brand>\n          <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n          <Navbar.Collapse id='responsive-navbar-nav'>\n            <Nav className='mr-auto'>\n              <Nav.Link href='#trade-partners'>Trade Partners</Nav.Link>\n              <Nav.Link href='#trade-balance'>Trade Balance</Nav.Link>\n              <Nav.Link href='#by-product'>Products</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        {(imports.length === 0 || exports.length === 0) && (\n          <div className='section' style={{ height: '100vh' }}>\n            <Spinner animation='border' variant='light' />\n          </div>\n        )}\n        {imports.length > 0 && exports.length > 0 && (\n          <div>\n            <ScrollableAnchor id={'trade-partners'}>\n              <div\n                className='section'\n                style={{ position: 'relative', height: 'calc(100vh - 50px)' }}\n              >\n                <Map imports={imports} exports={exports} flow={flow} />\n                <Menu setFlow={setFlow} />\n                <a\n                  href='#trade-balance'\n                  style={{ position: 'absolute', bottom: '2em' }}\n                >\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n\n            <ScrollableAnchor id={'trade-balance'}>\n              <div\n                className='section'\n                style={{\n                  height: '100vh',\n                  backgroundColor: '#555',\n                  position: 'relative',\n                  padding: '0 0 3em 0'\n                }}\n              >\n                <TradeBalanceChart tradeBalance={tradeBalance} />\n                <a\n                  href='#by-product'\n                  style={{ position: 'absolute', bottom: '2em' }}\n                >\n                  <div className='arrow-down'></div>\n                </a>\n              </div>\n            </ScrollableAnchor>\n\n            <ScrollableAnchor id={'by-product2'}>\n              <div\n                className='section'\n                style={{\n                  height: '100vh',\n                  backgroundColor: '#333',\n                  position: 'relative',\n                  padding: '0 0 3em 0'\n                }}\n              >\n                <ProductsTreeMap SITC2Data={importsSITC2} />\n              </div>\n            </ScrollableAnchor>\n          </div>\n        )}\n        <Navbar bg='dark' variant='dark' expand='lg'>\n          <Nav className='mr-auto'>\n            <Nav.Link href='https://github.com/joonaspartanen/finnish-foreign-trade/blob/master/README.md'>\n              About\n            </Nav.Link>\n          </Nav>\n        </Navbar>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}